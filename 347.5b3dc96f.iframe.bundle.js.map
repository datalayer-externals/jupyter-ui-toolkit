{"version":3,"file":"347.5b3dc96f.iframe.bundle.js","mappings":";;AAmBA;;;;;;AAMA;AACA;;;AAGA;AACA;;;;;AAKA;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;;;AAIA;AAvEA;;;AAuEA;AA5EA;;;AA4EA;AC1DA;;AAEA;AACA;;;;;;AAgBA;AClCA;;AAEA;AACA;AACA;;;;;;;;ACFA;;;AAGA;AACA;AACA;;;;;;;;;AASA;;;;;;AAMA;;;;;;;;;;AAUA;;;;;;;;;;;;AAYA;;;;AAIA;;;;;;;;;;;;;;;;;AAiBA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AC5EA;;;AAGA;AACA;;;;AAIA;AACA;;;;;;;;;AASA;AACA;;;;;;;;AAQA;;;;;;;;;;;AAWA;AACA;;;;;;;;;;AAUA;AACA;;;;;;;;;AASA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;;AAGA;AACA;;;;;;AAMA;;;;;AAKA;;;ACvHA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAeA;AACA;AACA;AACA;;;;;;;;AAQA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;;;;AAIA;AACA;;;;AAIA;AACA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;AAIA;;;;;;;AAOA;;;;AAIA;;;;AAIA;;AAEA;;;;AAIA;AACA;;;;;AAKA;AACA;;;;;;;;;;;AAWA;AACA;;;AAGA;AACA;;;AAGA;;ACxIA;;;;;ACvCA;;;;;;;;;;AAeA;;;;;;AAMA;;;;;;;;;;;;;AAaA;;;AAQA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;;;;AAIA;;AAEA;;;AAGA;;;;;;;AAOA;;;AAGA;;;AC1FA;;AAEA;AACA;AACA;;;ACFA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AAcA;AACA;AACA;;;;AAIA;;;;;;;;AAQA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;;;;AAIA;AACA;;;;AAIA;AACA;;;;AAIA;;;;AAIA;;;;;;;AAOA;;;;AAIA;;;;AAIA;;AAEA;;;;AAIA;AACA;;;;;AAKA;AACA;;;;;;;;;;;AAWA;AACA;;;AAGA;AACA;;;AAGA;;ACpHA;;AC9BA;;AAEA;;;;;AAKA;AACA;;AAEA;;;;;;;ACRA;ACHA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;ADlCA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;;AEVA;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;;;AAKA;;;;AAIA;;;;;ACCA;AACA;;AAEA;AACA;;;AAUA;;;AAGA;AACA;;;;AAIA;AACA;;AAEA;;;AAWA;AACA;;;AAGA;AACA;;;AAWA;AACA;;;AAGA;AACA;;;;;;ACvEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;AAiBA;;;;;;;AAQA;;AAEA;;;;;;;ACjCA;AACA;AACA;AACA;;AAEA;;;;;AAKA;;;;AAIA;;;AAGA;AACA;;;;;;;;ACfA;;;;;;AAMA;;;AAKA;;;AAGA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;AAQA;;;AAGA;;;;;ACvEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;;AAIA;;;;AAIA;;;;;;AAMA;AACA;AACA;;;AAGA;;;;;;ACpCA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;AAKA;;;AAGA;;AAEA;;;;;;;;;AC1BA;;;;ACCA;AACA;;AAEA;;AAEA;;AAEA;;;;;;AAMA;;AAEA;;;;;;ACZA;;;;;;AAMA;;;AAKA;;;;AAIA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","sources":["webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-components/dist/esm/avatar/avatar.styles.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-components/dist/esm/avatar/index.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-components/dist/esm/breadcrumb/breadcrumb.styles.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-components/dist/esm/progress-ring/progress-ring.styles.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-components/dist/esm/progress/progress.styles.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-components/dist/esm/search/search.styles.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-components/dist/esm/search/index.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-components/dist/esm/slider-label/slider-label.styles.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-components/dist/esm/tab-panel/tab-panel.styles.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-components/dist/esm/text-field/text-field.styles.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-components/dist/esm/text-field/index.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/avatar/avatar.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/breadcrumb-item/breadcrumb-item.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/anchor/anchor.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/breadcrumb/breadcrumb.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/button/button.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/listbox-option/listbox-option.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/patterns/start-end.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/progress-ring/progress-ring.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/progress/progress.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/search/search.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/select/select.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/slider-label/slider-label.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/slider/slider.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/tab/tab.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/tabs/tabs.template.js","webpack://@jupyter-notebook/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/text-field/text-field.template.js"],"sourcesContent":["import { css } from \"@microsoft/fast-element\";\nimport { Badge, display, } from \"@microsoft/fast-foundation\";\nimport { baseHeightMultiplier, controlCornerRadius, density, designUnit, neutralForegroundRest, typeRampBaseFontSize, } from \"../design-tokens\";\nimport { DirectionalStyleSheetBehavior } from \"../styles\";\nconst rtl = (context, definition) => css `\n    ::slotted(${context.tagFor(Badge)}) {\n        left: 0;\n    }\n`;\nconst ltr = (context, definition) => css `\n    ::slotted(${context.tagFor(Badge)}) {\n        right: 0;\n    }\n`;\n/**\n * Styles for Avatar\n * @public\n */\nexport const avatarStyles = (context, definition) => css `\n        ${display(\"flex\")} :host {\n            position: relative;\n            height: var(--avatar-size, var(--avatar-size-default));\n            max-width: var(--avatar-size, var(--avatar-size-default));\n            --avatar-size-default: calc(\n                (\n                        (${baseHeightMultiplier} + ${density}) * ${designUnit} +\n                            ((${designUnit} * 8) - 40)\n                    ) * 1px\n            );\n            --avatar-text-size: ${typeRampBaseFontSize};\n            --avatar-text-ratio: ${designUnit};\n        }\n\n        .link {\n            text-decoration: none;\n            color: ${neutralForegroundRest};\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n            align-items: center;\n            min-width: 100%;\n        }\n\n        .square {\n            border-radius: calc(${controlCornerRadius} * 1px);\n            min-width: 100%;\n            overflow: hidden;\n        }\n\n        .circle {\n            border-radius: 100%;\n            min-width: 100%;\n            overflow: hidden;\n        }\n\n        .backplate {\n            position: relative;\n            display: flex;\n        }\n\n        .media,\n        ::slotted(img) {\n            max-width: 100%;\n            position: absolute;\n            display: block;\n        }\n\n        .content {\n            font-size: calc(\n                (var(--avatar-text-size) + var(--avatar-size, var(--avatar-size-default))) /\n                    var(--avatar-text-ratio)\n            );\n            line-height: var(--avatar-size, var(--avatar-size-default));\n            display: block;\n            min-height: var(--avatar-size, var(--avatar-size-default));\n        }\n\n        ::slotted(${context.tagFor(Badge)}) {\n            position: absolute;\n            display: block;\n        }\n    `.withBehaviors(new DirectionalStyleSheetBehavior(ltr(context, definition), rtl(context, definition)));\n","import { __decorate } from \"tslib\";\nimport { attr, html, when } from \"@microsoft/fast-element\";\nimport { Avatar as FoundationAvatar, avatarTemplate as template, } from \"@microsoft/fast-foundation\";\nimport { avatarStyles as styles } from \"./avatar.styles\";\n/**\n * The FAST Avatar Class\n * @public\n *\n */\nexport class Avatar extends FoundationAvatar {\n}\n__decorate([\n    attr({ attribute: \"src\" })\n], Avatar.prototype, \"imgSrc\", void 0);\n__decorate([\n    attr\n], Avatar.prototype, \"alt\", void 0);\n/**\n * The FAST Avatar Template for Images\n *  @public\n *\n */\nexport const imgTemplate = html `\n    ${when(x => x.imgSrc, html `\n            <img\n                src=\"${x => x.imgSrc}\"\n                alt=\"${x => x.alt}\"\n                slot=\"media\"\n                class=\"media\"\n                part=\"media\"\n            />\n        `)}\n`;\n/**\n * A function that returns a {@link @microsoft/fast-foundation#Avatar} registration for configuring the component with a DesignSystem.\n *  {@link @microsoft/fast-foundation#avatarTemplate}\n *\n *\n * @public\n * @remarks\n * Generates HTML Element: `<fast-avatar>`\n */\nexport const fastAvatar = Avatar.compose({\n    baseName: \"avatar\",\n    baseClass: FoundationAvatar,\n    template,\n    styles,\n    media: imgTemplate,\n    shadowOptions: {\n        delegatesFocus: true,\n    },\n});\nexport { styles as avatarStyles };\n","import { css } from \"@microsoft/fast-element\";\nimport { display, } from \"@microsoft/fast-foundation\";\nimport { bodyFont, typeRampBaseFontSize, typeRampBaseLineHeight } from \"../design-tokens\";\n/**\n * Styles for Breadcrumb\n * @public\n */\nexport const breadcrumbStyles = (context, definition) => css `\n    ${display(\"inline-block\")} :host {\n        box-sizing: border-box;\n        font-family: ${bodyFont};\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n    }\n\n    .list {\n        display: flex;\n        flex-wrap: wrap;\n    }\n`;\n","import { css } from \"@microsoft/fast-element\";\nimport { display, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { accentForegroundRest, neutralFillRest, neutralForegroundHint, } from \"../design-tokens\";\nimport { heightNumber } from \"../styles\";\n/**\n * Styles for Progress Ring\n * @public\n */\nexport const progressRingStyles = (context, definition) => css `\n        ${display(\"flex\")} :host {\n            align-items: center;\n            outline: none;\n            height: calc(${heightNumber} * 1px);\n            width: calc(${heightNumber} * 1px);\n            margin: calc(${heightNumber} * 1px) 0;\n        }\n\n        .progress {\n            height: 100%;\n            width: 100%;\n        }\n\n        .background {\n            stroke: ${neutralFillRest};\n            fill: none;\n            stroke-width: 2px;\n        }\n\n        .determinate {\n            stroke: ${accentForegroundRest};\n            fill: none;\n            stroke-width: 2px;\n            stroke-linecap: round;\n            transform-origin: 50% 50%;\n            transform: rotate(-90deg);\n            transition: all 0.2s ease-in-out;\n        }\n\n        .indeterminate-indicator-1 {\n            stroke: ${accentForegroundRest};\n            fill: none;\n            stroke-width: 2px;\n            stroke-linecap: round;\n            transform-origin: 50% 50%;\n            transform: rotate(-90deg);\n            transition: all 0.2s ease-in-out;\n            animation: spin-infinite 2s linear infinite;\n        }\n\n        :host([paused]) .indeterminate-indicator-1 {\n            animation-play-state: paused;\n            stroke: ${neutralFillRest};\n        }\n\n        :host([paused]) .determinate {\n            stroke: ${neutralForegroundHint};\n        }\n\n        @keyframes spin-infinite {\n            0% {\n                stroke-dasharray: 0.01px 43.97px;\n                transform: rotate(0deg);\n            }\n            50% {\n                stroke-dasharray: 21.99px 21.99px;\n                transform: rotate(450deg);\n            }\n            100% {\n                stroke-dasharray: 0.01px 43.97px;\n                transform: rotate(1080deg);\n            }\n        }\n    `.withBehaviors(forcedColorsStylesheetBehavior(css `\n                .indeterminate-indicator-1,\n                .determinate {\n                    stroke: ${SystemColors.FieldText};\n                }\n                .background {\n                    stroke: ${SystemColors.Field};\n                }\n                :host([paused]) .indeterminate-indicator-1 {\n                    stroke: ${SystemColors.Field};\n                }\n                :host([paused]) .determinate {\n                    stroke: ${SystemColors.GrayText};\n                }\n            `));\n","import { css } from \"@microsoft/fast-element\";\nimport { display, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { accentForegroundRest, designUnit, neutralFillRest, neutralForegroundHint, } from \"../design-tokens\";\n/**\n * Styles for Progress\n * @public\n */\nexport const progressStyles = (context, definition) => css `\n        ${display(\"flex\")} :host {\n            align-items: center;\n            outline: none;\n            height: calc(${designUnit} * 1px);\n            margin: calc(${designUnit} * 1px) 0;\n        }\n\n        .progress {\n            background-color: ${neutralFillRest};\n            border-radius: calc(${designUnit} * 1px);\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            position: relative;\n        }\n\n        .determinate {\n            background-color: ${accentForegroundRest};\n            border-radius: calc(${designUnit} * 1px);\n            height: 100%;\n            transition: all 0.2s ease-in-out;\n            display: flex;\n        }\n\n        .indeterminate {\n            height: 100%;\n            border-radius: calc(${designUnit} * 1px);\n            display: flex;\n            width: 100%;\n            position: relative;\n            overflow: hidden;\n        }\n\n        .indeterminate-indicator-1 {\n            position: absolute;\n            opacity: 0;\n            height: 100%;\n            background-color: ${accentForegroundRest};\n            border-radius: calc(${designUnit} * 1px);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.6, 1);\n            width: 40%;\n            animation: indeterminate-1 2s infinite;\n        }\n\n        .indeterminate-indicator-2 {\n            position: absolute;\n            opacity: 0;\n            height: 100%;\n            background-color: ${accentForegroundRest};\n            border-radius: calc(${designUnit} * 1px);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.6, 1);\n            width: 60%;\n            animation: indeterminate-2 2s infinite;\n        }\n\n        :host([paused]) .indeterminate-indicator-1,\n        :host([paused]) .indeterminate-indicator-2 {\n            animation-play-state: paused;\n            background-color: ${neutralFillRest};\n        }\n\n        :host([paused]) .determinate {\n            background-color: ${neutralForegroundHint};\n        }\n\n        @keyframes indeterminate-1 {\n            0% {\n                opacity: 1;\n                transform: translateX(-100%);\n            }\n            70% {\n                opacity: 1;\n                transform: translateX(300%);\n            }\n            70.01% {\n                opacity: 0;\n            }\n            100% {\n                opacity: 0;\n                transform: translateX(300%);\n            }\n        }\n\n        @keyframes indeterminate-2 {\n            0% {\n                opacity: 0;\n                transform: translateX(-150%);\n            }\n            29.99% {\n                opacity: 0;\n            }\n            30% {\n                opacity: 1;\n                transform: translateX(-150%);\n            }\n            100% {\n                transform: translateX(166.66%);\n                opacity: 1;\n            }\n        }\n    `.withBehaviors(forcedColorsStylesheetBehavior(css `\n                .progress {\n                    forced-color-adjust: none;\n                    background-color: ${SystemColors.Field};\n                    box-shadow: 0 0 0 1px inset ${SystemColors.FieldText};\n                }\n                .determinate,\n                .indeterminate-indicator-1,\n                .indeterminate-indicator-2 {\n                    forced-color-adjust: none;\n                    background-color: ${SystemColors.FieldText};\n                }\n                :host([paused]) .determinate,\n                :host([paused]) .indeterminate-indicator-1,\n                :host([paused]) .indeterminate-indicator-2 {\n                    background-color: ${SystemColors.GrayText};\n                }\n            `));\n","import { css } from \"@microsoft/fast-element\";\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { accentFillActive, accentFillHover, accentFillRest, bodyFont, controlCornerRadius, designUnit, disabledOpacity, fillColor, focusStrokeOuter, neutralFillHover, neutralFillInputHover, neutralFillInputRest, neutralForegroundRest, neutralStrokeRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from \"../design-tokens\";\nimport { heightNumber } from \"../styles/index\";\nexport const searchStyles = (context, definition) => css `\n    ${display(\"inline-block\")} :host {\n        font-family: ${bodyFont};\n        outline: none;\n        user-select: none;\n    }\n\n    .root {\n        box-sizing: border-box;\n        position: relative;\n        display: flex;\n        flex-direction: row;\n        color: ${neutralForegroundRest};\n        background: ${neutralFillInputRest};\n        border-radius: calc(${controlCornerRadius} * 1px);\n        border: calc(${strokeWidth} * 1px) solid ${accentFillRest};\n        height: calc(${heightNumber} * 1px);\n    }\n\n    .control {\n        -webkit-appearance: none;\n        font: inherit;\n        background: transparent;\n        border: 0;\n        color: inherit;\n        height: calc(100% - 4px);\n        width: 100%;\n        margin-top: auto;\n        margin-bottom: auto;\n        border: none;\n        padding: 0;\n        padding-inline-start: calc(${designUnit} * 2px + 1px);\n        padding-inline-end: calc((${designUnit} * 2px) + (${heightNumber} * 1px) + 1px);\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n    }\n\n    .control::-webkit-search-cancel-button {\n        -webkit-appearance: none;\n    }\n\n    .control:hover,\n    .control:${focusVisible},\n    .control:disabled,\n    .control:active {\n        outline: none;\n    }\n\n    .clear-button {\n        position: absolute;\n        right: 0;\n        top: 1px;\n        height: calc(100% - 2px);\n        opacity: 0;\n    }\n\n    .input-wrapper {\n        display: flex;\n        position: relative;\n        width: 100%;\n    }\n\n    .label {\n        display: block;\n        color: ${neutralForegroundRest};\n        cursor: pointer;\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n        margin-bottom: 4px;\n    }\n\n    .label__hidden {\n        display: none;\n        visibility: hidden;\n    }\n\n    .start,\n    .end {\n        display: flex;\n        margin: 1px;\n        fill: currentcolor;\n    }\n\n    ::slotted([slot=\"end\"]) {\n        height: 100%\n    }\n\n    .end {\n        margin-inline-end: 1px;\n    }\n\n    ::slotted(svg) {\n        /* TODO: adaptive typography https://github.com/microsoft/fast/issues/2432 */\n        width: 16px;\n        height: 16px;\n        margin-inline-end: 11px;\n        margin-inline-start: 11px;\n        margin-top: auto;\n        margin-bottom: auto;\n    }\n\n    :host(:hover:not([disabled])) .root {\n        background: ${neutralFillInputHover};\n        border-color: ${accentFillHover};\n    }\n\n    :host(:active:not([disabled])) .root {\n        background: ${neutralFillInputHover};\n        border-color: ${accentFillActive};\n    }\n\n    :host(:focus-within:not([disabled])) .root {\n        border-color: ${focusStrokeOuter};\n        box-shadow: 0 0 0 1px ${focusStrokeOuter} inset;\n    }\n\n    .clear-button__hidden {\n        opacity: 0;\n    }\n\n    :host(:hover:not([disabled], [readOnly])) .clear-button,\n    :host(:active:not([disabled], [readOnly])) .clear-button,\n    :host(:focus-within:not([disabled], [readOnly])) .clear-button {\n        opacity: 1;\n    }\n\n    :host(:hover:not([disabled], [readOnly])) .clear-button__hidden,\n    :host(:active:not([disabled], [readOnly])) .clear-button__hidden,\n    :host(:focus-within:not([disabled], [readOnly])) .clear-button__hidden {\n        opacity: 0;\n    }\n\n    :host([appearance=\"filled\"]) .root {\n        background: ${fillColor};\n    }\n\n    :host([appearance=\"filled\"]:hover:not([disabled])) .root {\n        background: ${neutralFillHover};\n    }\n\n    :host([disabled]) .label,\n    :host([readonly]) .label,\n    :host([readonly]) .control,\n    :host([disabled]) .control {\n        cursor: ${disabledCursor};\n    }\n\n    :host([disabled]) {\n        opacity: ${disabledOpacity};\n    }\n\n    :host([disabled]) .control {\n        border-color: ${neutralStrokeRest};\n    }\n`.withBehaviors(forcedColorsStylesheetBehavior(css `\n                .root,\n                :host([appearance=\"filled\"]) .root {\n                    forced-color-adjust: none;\n                    background: ${SystemColors.Field};\n                    border-color: ${SystemColors.FieldText};\n                }\n                :host(:hover:not([disabled])) .root,\n                :host([appearance=\"filled\"]:hover:not([disabled])) .root,\n                :host([appearance=\"filled\"]:hover) .root {\n                    background: ${SystemColors.Field};\n                    border-color: ${SystemColors.Highlight};\n                }\n                .start,\n                .end {\n                    fill: currentcolor;\n                }\n                :host([disabled]) {\n                    opacity: 1;\n                }\n                :host([disabled]) .root,\n                :host([appearance=\"filled\"]:hover[disabled]) .root {\n                    border-color: ${SystemColors.GrayText};\n                    background: ${SystemColors.Field};\n                }\n                :host(:focus-within:enabled) .root {\n                    border-color: ${SystemColors.Highlight};\n                    box-shadow: 0 0 0 1px ${SystemColors.Highlight} inset;\n                }\n                input::placeholder {\n                    color: ${SystemColors.GrayText};\n                }\n            `));\n","import { __decorate } from \"tslib\";\nimport { attr, DOM } from \"@microsoft/fast-element\";\nimport { Search as FoundationSearch, searchTemplate as template, } from \"@microsoft/fast-foundation\";\nimport { fillColor, neutralFillRecipe } from \"../design-tokens\";\nimport { searchStyles as styles } from \"./search.styles\";\n/**\n * @internal\n */\nexport class Search extends FoundationSearch {\n    constructor() {\n        super(...arguments);\n        /**\n         * The appearance of the element.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: appearance\n         */\n        this.appearance = \"outline\";\n    }\n    appearanceChanged(oldValue, newValue) {\n        // queueUpdate waits for this.root to be defined\n        DOM.queueUpdate(() => {\n            if (newValue === \"filled\") {\n                fillColor.setValueFor(this.root, (target) => neutralFillRecipe\n                    .getValueFor(target)\n                    .evaluate(target, fillColor.getValueFor(this)).rest);\n            }\n            else if (oldValue === \"filled\") {\n                fillColor.deleteValueFor(this.root);\n            }\n        });\n    }\n}\n__decorate([\n    attr\n], Search.prototype, \"appearance\", void 0);\n/**\n * A function that returns a {@link @microsoft/fast-foundation#Search} registration for configuring the component with a DesignSystem.\n * Implements {@link @microsoft/fast-foundation#searchTemplate}\n *\n *\n * @public\n * @remarks\n * Generates HTML Element: \\<fast-search\\>\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}\n */\nexport const fastSearch = Search.compose({\n    baseName: \"search\",\n    baseClass: FoundationSearch,\n    template,\n    styles,\n    shadowOptions: {\n        delegatesFocus: true,\n    },\n});\n/**\n * Styles for Search\n * @public\n */\nexport const searchStyles = styles;\n","import { css } from \"@microsoft/fast-element\";\nimport { display, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { bodyFont, designUnit, disabledOpacity, neutralForegroundRest, neutralStrokeRest, } from \"../design-tokens\";\nimport { heightNumber } from \"../styles/index\";\n/**\n * Styles for Horizontal Slider label\n * @public\n */\nexport const horizontalSliderLabelStyles = css `\n    :host {\n        align-self: start;\n        grid-row: 2;\n        margin-top: -2px;\n        height: calc((${heightNumber} / 2 + ${designUnit}) * 1px);\n        width: auto;\n    }\n    .container {\n        grid-template-rows: auto auto;\n        grid-template-columns: 0;\n    }\n    .label {\n        margin: 2px 0;\n    }\n`;\n/**\n * Styles for Vertical slider label\n * @public\n */\nexport const verticalSliderLabelStyles = css `\n    :host {\n        justify-self: start;\n        grid-column: 2;\n        margin-left: 2px;\n        height: auto;\n        width: calc((${heightNumber} / 2 + ${designUnit}) * 1px);\n    }\n    .container {\n        grid-template-columns: auto auto;\n        grid-template-rows: 0;\n        min-width: calc(var(--thumb-size) * 1px);\n        height: calc(var(--thumb-size) * 1px);\n    }\n    .mark {\n        transform: rotate(90deg);\n        align-self: center;\n    }\n    .label {\n        margin-left: calc((${designUnit} / 2) * 3px);\n        align-self: center;\n    }\n`;\n/**\n * Styles for Slider Label\n * @public\n */\nexport const sliderLabelStyles = (context, definition) => css `\n        ${display(\"block\")} :host {\n            font-family: ${bodyFont};\n            color: ${neutralForegroundRest};\n            fill: currentcolor;\n        }\n        .root {\n            position: absolute;\n            display: grid;\n        }\n        .container {\n            display: grid;\n            justify-self: center;\n        }\n        .label {\n            justify-self: center;\n            align-self: center;\n            white-space: nowrap;\n            max-width: 30px;\n        }\n        .mark {\n            width: calc((${designUnit} / 4) * 1px);\n            height: calc(${heightNumber} * 0.25 * 1px);\n            background: ${neutralStrokeRest};\n            justify-self: center;\n        }\n        :host(.disabled) {\n            opacity: ${disabledOpacity};\n        }\n    `.withBehaviors(forcedColorsStylesheetBehavior(css `\n                .mark {\n                    forced-color-adjust: none;\n                    background: ${SystemColors.FieldText};\n                }\n                :host(.disabled) {\n                    forced-color-adjust: none;\n                    opacity: 1;\n                }\n                :host(.disabled) .label {\n                    color: ${SystemColors.GrayText};\n                }\n                :host(.disabled) .mark {\n                    background: ${SystemColors.GrayText};\n                }\n            `));\n","import { css } from \"@microsoft/fast-element\";\nimport { display, } from \"@microsoft/fast-foundation\";\nimport { density, designUnit, typeRampBaseFontSize, typeRampBaseLineHeight, } from \"../design-tokens\";\n/**\n * Styles for Tab Panel\n * @public\n */\nexport const tabPanelStyles = (context, definition) => css `\n    ${display(\"block\")} :host {\n        box-sizing: border-box;\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n        padding: 0 calc((6 + (${designUnit} * 2 * ${density})) * 1px);\n    }\n`;\n","import { css } from \"@microsoft/fast-element\";\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { accentFillActive, accentFillHover, accentFillRest, bodyFont, controlCornerRadius, designUnit, disabledOpacity, focusStrokeOuter, neutralFillHover, neutralFillInputHover, neutralFillInputRest, neutralFillRest, neutralForegroundRest, neutralStrokeRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from \"../design-tokens\";\nimport { heightNumber } from \"../styles/index\";\n/**\n * Styles for Text Field\n * @public\n */\nexport const textFieldStyles = (context, definition) => css `\n    ${display(\"inline-block\")} :host {\n        font-family: ${bodyFont};\n        outline: none;\n        user-select: none;\n    }\n\n    .root {\n        box-sizing: border-box;\n        position: relative;\n        display: flex;\n        flex-direction: row;\n        color: ${neutralForegroundRest};\n        background: ${neutralFillInputRest};\n        border-radius: calc(${controlCornerRadius} * 1px);\n        border: calc(${strokeWidth} * 1px) solid ${accentFillRest};\n        height: calc(${heightNumber} * 1px);\n    }\n\n    .control {\n        -webkit-appearance: none;\n        font: inherit;\n        background: transparent;\n        border: 0;\n        color: inherit;\n        height: calc(100% - 4px);\n        width: 100%;\n        margin-top: auto;\n        margin-bottom: auto;\n        border: none;\n        padding: 0 calc(${designUnit} * 2px + 1px);\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n    }\n\n    .control:hover,\n    .control:${focusVisible},\n    .control:disabled,\n    .control:active {\n        outline: none;\n    }\n\n    .label {\n        display: block;\n        color: ${neutralForegroundRest};\n        cursor: pointer;\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n        margin-bottom: 4px;\n    }\n\n    .label__hidden {\n        display: none;\n        visibility: hidden;\n    }\n\n    .start,\n    .end {\n        display: flex;\n        margin: auto;\n        fill: currentcolor;\n    }\n\n    ::slotted(svg) {\n        /* TODO: adaptive typography https://github.com/microsoft/fast/issues/2432 */\n        width: 16px;\n        height: 16px;\n    }\n\n    .start {\n        margin-inline-start: 11px;\n    }\n\n    .end {\n        margin-inline-end: 11px;\n    }\n\n    :host(:hover:not([disabled])) .root {\n        background: ${neutralFillInputHover};\n        border-color: ${accentFillHover};\n    }\n\n    :host(:active:not([disabled])) .root {\n        background: ${neutralFillInputHover};\n        border-color: ${accentFillActive};\n    }\n\n    :host(:focus-within:not([disabled])) .root {\n        border-color: ${focusStrokeOuter};\n        box-shadow: 0 0 0 1px ${focusStrokeOuter} inset;\n    }\n\n    :host([appearance=\"filled\"]) .root {\n        background: ${neutralFillRest};\n    }\n\n    :host([appearance=\"filled\"]:hover:not([disabled])) .root {\n        background: ${neutralFillHover};\n    }\n\n    :host([disabled]) .label,\n    :host([readonly]) .label,\n    :host([readonly]) .control,\n    :host([disabled]) .control {\n        cursor: ${disabledCursor};\n    }\n\n    :host([disabled]) {\n        opacity: ${disabledOpacity};\n    }\n\n    :host([disabled]) .control {\n        border-color: ${neutralStrokeRest};\n    }\n`.withBehaviors(forcedColorsStylesheetBehavior(css `\n                .root,\n                :host([appearance=\"filled\"]) .root {\n                    forced-color-adjust: none;\n                    background: ${SystemColors.Field};\n                    border-color: ${SystemColors.FieldText};\n                }\n                :host(:hover:not([disabled])) .root,\n                :host([appearance=\"filled\"]:hover:not([disabled])) .root,\n                :host([appearance=\"filled\"]:hover) .root {\n                    background: ${SystemColors.Field};\n                    border-color: ${SystemColors.Highlight};\n                }\n                .start,\n                .end {\n                    fill: currentcolor;\n                }\n                :host([disabled]) {\n                    opacity: 1;\n                }\n                :host([disabled]) .root,\n                :host([appearance=\"filled\"]:hover[disabled]) .root {\n                    border-color: ${SystemColors.GrayText};\n                    background: ${SystemColors.Field};\n                }\n                :host(:focus-within:enabled) .root {\n                    border-color: ${SystemColors.Highlight};\n                    box-shadow: 0 0 0 1px ${SystemColors.Highlight} inset;\n                }\n                input::placeholder {\n                    color: ${SystemColors.GrayText};\n                }\n            `));\n","import { __decorate } from \"tslib\";\nimport { attr } from \"@microsoft/fast-element\";\nimport { TextField as FoundationTextField, textFieldTemplate as template, } from \"@microsoft/fast-foundation\";\nimport { textFieldStyles as styles } from \"./text-field.styles\";\n/**\n * @internal\n */\nexport class TextField extends FoundationTextField {\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        if (!this.appearance) {\n            this.appearance = \"outline\";\n        }\n    }\n}\n__decorate([\n    attr\n], TextField.prototype, \"appearance\", void 0);\n/**\n * A function that returns a {@link @microsoft/fast-foundation#TextField} registration for configuring the component with a DesignSystem.\n * Implements {@link @microsoft/fast-foundation#textFieldTemplate}\n *\n *\n * @public\n * @remarks\n * Generates HTML Element: `<fast-text-field>`\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}\n */\nexport const fastTextField = TextField.compose({\n    baseName: \"text-field\",\n    baseClass: FoundationTextField,\n    template,\n    styles,\n    shadowOptions: {\n        delegatesFocus: true,\n    },\n});\nexport { styles as textFieldStyles };\n","import { html } from \"@microsoft/fast-element\";\n/**\n * The template for {@link @microsoft/fast-foundation#Avatar} component.\n * @public\n */\nexport const avatarTemplate = (context, definition) => html `\n    <div\n        class=\"backplate ${x => x.shape}\"\n        part=\"backplate\"\n        style=\"${x => x.fill ? `background-color: var(--avatar-fill-${x.fill});` : void 0}\"\n    >\n        <a\n            class=\"link\"\n            part=\"link\"\n            href=\"${x => (x.link ? x.link : void 0)}\"\n            style=\"${x => (x.color ? `color: var(--avatar-color-${x.color});` : void 0)}\"\n        >\n            <slot name=\"media\" part=\"media\">${definition.media || \"\"}</slot>\n            <slot class=\"content\" part=\"content\"><slot>\n        </a>\n    </div>\n    <slot name=\"badge\" part=\"badge\"></slot>\n`;\n","import { html, when } from \"@microsoft/fast-element\";\nimport { anchorTemplate } from \"../anchor\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(BreadcrumbItem:class)} component.\n * @public\n */\nexport const breadcrumbItemTemplate = (context, definition) => html `\n    <div role=\"listitem\" class=\"listitem\" part=\"listitem\">\n        ${when(x => x.href && x.href.length > 0, html `\n                ${anchorTemplate(context, definition)}\n            `)}\n        ${when(x => !x.href, html `\n                ${startSlotTemplate(context, definition)}\n                <slot></slot>\n                ${endSlotTemplate(context, definition)}\n            `)}\n        ${when(x => x.separator, html `\n                <span class=\"separator\" part=\"separator\" aria-hidden=\"true\">\n                    <slot name=\"separator\">${definition.separator || \"\"}</slot>\n                </span>\n            `)}\n    </div>\n`;\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Anchor:class)} component.\n * @public\n */\nexport const anchorTemplate = (context, definition) => html `\n    <a\n        class=\"control\"\n        part=\"control\"\n        download=\"${x => x.download}\"\n        href=\"${x => x.href}\"\n        hreflang=\"${x => x.hreflang}\"\n        ping=\"${x => x.ping}\"\n        referrerpolicy=\"${x => x.referrerpolicy}\"\n        rel=\"${x => x.rel}\"\n        target=\"${x => x.target}\"\n        type=\"${x => x.type}\"\n        aria-atomic=\"${x => x.ariaAtomic}\"\n        aria-busy=\"${x => x.ariaBusy}\"\n        aria-controls=\"${x => x.ariaControls}\"\n        aria-current=\"${x => x.ariaCurrent}\"\n        aria-describedby=\"${x => x.ariaDescribedby}\"\n        aria-details=\"${x => x.ariaDetails}\"\n        aria-disabled=\"${x => x.ariaDisabled}\"\n        aria-errormessage=\"${x => x.ariaErrormessage}\"\n        aria-expanded=\"${x => x.ariaExpanded}\"\n        aria-flowto=\"${x => x.ariaFlowto}\"\n        aria-haspopup=\"${x => x.ariaHaspopup}\"\n        aria-hidden=\"${x => x.ariaHidden}\"\n        aria-invalid=\"${x => x.ariaInvalid}\"\n        aria-keyshortcuts=\"${x => x.ariaKeyshortcuts}\"\n        aria-label=\"${x => x.ariaLabel}\"\n        aria-labelledby=\"${x => x.ariaLabelledby}\"\n        aria-live=\"${x => x.ariaLive}\"\n        aria-owns=\"${x => x.ariaOwns}\"\n        aria-relevant=\"${x => x.ariaRelevant}\"\n        aria-roledescription=\"${x => x.ariaRoledescription}\"\n        ${ref(\"control\")}\n    >\n        ${startSlotTemplate(context, definition)}\n        <span class=\"content\" part=\"content\">\n            <slot ${slotted(\"defaultSlottedContent\")}></slot>\n        </span>\n        ${endSlotTemplate(context, definition)}\n    </a>\n`;\n","import { elements, html, slotted } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#Breadcrumb} component.\n * @public\n */\nexport const breadcrumbTemplate = (context, definition) => html `\n    <template role=\"navigation\">\n        <div role=\"list\" class=\"list\" part=\"list\">\n            <slot\n                ${slotted({ property: \"slottedBreadcrumbItems\", filter: elements() })}\n            ></slot>\n        </div>\n    </template>\n`;\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Button:class)} component.\n * @public\n */\nexport const buttonTemplate = (context, definition) => html `\n    <button\n        class=\"control\"\n        part=\"control\"\n        ?autofocus=\"${x => x.autofocus}\"\n        ?disabled=\"${x => x.disabled}\"\n        form=\"${x => x.formId}\"\n        formaction=\"${x => x.formaction}\"\n        formenctype=\"${x => x.formenctype}\"\n        formmethod=\"${x => x.formmethod}\"\n        formnovalidate=\"${x => x.formnovalidate}\"\n        formtarget=\"${x => x.formtarget}\"\n        name=\"${x => x.name}\"\n        type=\"${x => x.type}\"\n        value=\"${x => x.value}\"\n        aria-atomic=\"${x => x.ariaAtomic}\"\n        aria-busy=\"${x => x.ariaBusy}\"\n        aria-controls=\"${x => x.ariaControls}\"\n        aria-current=\"${x => x.ariaCurrent}\"\n        aria-describedby=\"${x => x.ariaDescribedby}\"\n        aria-details=\"${x => x.ariaDetails}\"\n        aria-disabled=\"${x => x.ariaDisabled}\"\n        aria-errormessage=\"${x => x.ariaErrormessage}\"\n        aria-expanded=\"${x => x.ariaExpanded}\"\n        aria-flowto=\"${x => x.ariaFlowto}\"\n        aria-haspopup=\"${x => x.ariaHaspopup}\"\n        aria-hidden=\"${x => x.ariaHidden}\"\n        aria-invalid=\"${x => x.ariaInvalid}\"\n        aria-keyshortcuts=\"${x => x.ariaKeyshortcuts}\"\n        aria-label=\"${x => x.ariaLabel}\"\n        aria-labelledby=\"${x => x.ariaLabelledby}\"\n        aria-live=\"${x => x.ariaLive}\"\n        aria-owns=\"${x => x.ariaOwns}\"\n        aria-pressed=\"${x => x.ariaPressed}\"\n        aria-relevant=\"${x => x.ariaRelevant}\"\n        aria-roledescription=\"${x => x.ariaRoledescription}\"\n        ${ref(\"control\")}\n    >\n        ${startSlotTemplate(context, definition)}\n        <span class=\"content\" part=\"content\">\n            <slot ${slotted(\"defaultSlottedContent\")}></slot>\n        </span>\n        ${endSlotTemplate(context, definition)}\n    </button>\n`;\n","import { html } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(ListboxOption:class)} component.\n * @public\n */\nexport const listboxOptionTemplate = (context, definition) => html `\n    <template\n        aria-checked=\"${x => x.ariaChecked}\"\n        aria-disabled=\"${x => x.ariaDisabled}\"\n        aria-posinset=\"${x => x.ariaPosInSet}\"\n        aria-selected=\"${x => x.ariaSelected}\"\n        aria-setsize=\"${x => x.ariaSetSize}\"\n        class=\"${x => [x.checked && \"checked\", x.selected && \"selected\", x.disabled && \"disabled\"]\n    .filter(Boolean)\n    .join(\" \")}\"\n        role=\"option\"\n    >\n        ${startSlotTemplate(context, definition)}\n        <span class=\"content\" part=\"content\">\n            <slot></slot>\n        </span>\n        ${endSlotTemplate(context, definition)}\n    </template>\n`;\n","import { html, ref } from \"@microsoft/fast-element\";\n/**\n * A mixin class implementing start and end elements.\n * These are generally used to decorate text elements with icons or other visual indicators.\n * @public\n */\nexport class StartEnd {\n    handleStartContentChange() {\n        this.startContainer.classList.toggle(\"start\", this.start.assignedNodes().length > 0);\n    }\n    handleEndContentChange() {\n        this.endContainer.classList.toggle(\"end\", this.end.assignedNodes().length > 0);\n    }\n}\n/**\n * The template for the end element.\n * For use with {@link StartEnd}\n *\n * @public\n */\nexport const endSlotTemplate = (context, definition) => html `\n    <span\n        part=\"end\"\n        ${ref(\"endContainer\")}\n        class=${x => (definition.end ? \"end\" : void 0)}\n    >\n        <slot name=\"end\" ${ref(\"end\")} @slotchange=\"${x => x.handleEndContentChange()}\">\n            ${definition.end || \"\"}\n        </slot>\n    </span>\n`;\n/**\n * The template for the start element.\n * For use with {@link StartEnd}\n *\n * @public\n */\nexport const startSlotTemplate = (context, definition) => html `\n    <span\n        part=\"start\"\n        ${ref(\"startContainer\")}\n        class=\"${x => (definition.start ? \"start\" : void 0)}\"\n    >\n        <slot\n            name=\"start\"\n            ${ref(\"start\")}\n            @slotchange=\"${x => x.handleStartContentChange()}\"\n        >\n            ${definition.start || \"\"}\n        </slot>\n    </span>\n`;\n/**\n * The template for the end element.\n * For use with {@link StartEnd}\n *\n * @public\n * @deprecated - use endSlotTemplate\n */\nexport const endTemplate = html `\n    <span part=\"end\" ${ref(\"endContainer\")}>\n        <slot\n            name=\"end\"\n            ${ref(\"end\")}\n            @slotchange=\"${x => x.handleEndContentChange()}\"\n        ></slot>\n    </span>\n`;\n/**\n * The template for the start element.\n * For use with {@link StartEnd}\n *\n * @public\n * @deprecated - use startSlotTemplate\n */\nexport const startTemplate = html `\n    <span part=\"start\" ${ref(\"startContainer\")}>\n        <slot\n            name=\"start\"\n            ${ref(\"start\")}\n            @slotchange=\"${x => x.handleStartContentChange()}\"\n        ></slot>\n    </span>\n`;\n","import { html, when } from \"@microsoft/fast-element\";\nconst progressSegments = 44;\n/**\n * The template for the {@link @microsoft/fast-foundation#BaseProgress} component.\n * @public\n */\nexport const progressRingTemplate = (context, definition) => html `\n    <template\n        role=\"progressbar\"\n        aria-valuenow=\"${x => x.value}\"\n        aria-valuemin=\"${x => x.min}\"\n        aria-valuemax=\"${x => x.max}\"\n        class=\"${x => (x.paused ? \"paused\" : \"\")}\"\n    >\n        ${when(x => typeof x.value === \"number\", html `\n                <svg\n                    class=\"progress\"\n                    part=\"progress\"\n                    viewBox=\"0 0 16 16\"\n                    slot=\"determinate\"\n                >\n                    <circle\n                        class=\"background\"\n                        part=\"background\"\n                        cx=\"8px\"\n                        cy=\"8px\"\n                        r=\"7px\"\n                    ></circle>\n                    <circle\n                        class=\"determinate\"\n                        part=\"determinate\"\n                        style=\"stroke-dasharray: ${x => (progressSegments * x.percentComplete) /\n    100}px ${progressSegments}px\"\n                        cx=\"8px\"\n                        cy=\"8px\"\n                        r=\"7px\"\n                    ></circle>\n                </svg>\n            `)}\n        ${when(x => typeof x.value !== \"number\", html `\n                <slot name=\"indeterminate\" slot=\"indeterminate\">\n                    ${definition.indeterminateIndicator || \"\"}\n                </slot>\n            `)}\n    </template>\n`;\n","import { html, when } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#BaseProgress} component.\n * @public\n */\nexport const progressTemplate = (context, defintion) => html `\n    <template\n        role=\"progressbar\"\n        aria-valuenow=\"${x => x.value}\"\n        aria-valuemin=\"${x => x.min}\"\n        aria-valuemax=\"${x => x.max}\"\n        class=\"${x => (x.paused ? \"paused\" : \"\")}\"\n    >\n        ${when(x => typeof x.value === \"number\", html `\n                <div class=\"progress\" part=\"progress\" slot=\"determinate\">\n                    <div\n                        class=\"determinate\"\n                        part=\"determinate\"\n                        style=\"width: ${x => x.percentComplete}%\"\n                    ></div>\n                </div>\n            `)}\n        ${when(x => typeof x.value !== \"number\", html `\n                <div class=\"progress\" part=\"progress\" slot=\"indeterminate\">\n                    <slot class=\"indeterminate\" name=\"indeterminate\">\n                        ${defintion.indeterminateIndicator1 || \"\"}\n                        ${defintion.indeterminateIndicator2 || \"\"}\n                    </slot>\n                </div>\n            `)}\n    </template>\n`;\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns\";\nimport { whitespaceFilter } from \"../utilities\";\nimport { Button } from \"../button\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Search:class)} component.\n * @public\n */\nexport const searchTemplate = (context, definition) => html `\n    <template\n        class=\"\n            ${x => (x.readOnly ? \"readonly\" : \"\")}\n        \"\n    >\n        <label\n            part=\"label\"\n            for=\"control\"\n            class=\"${x => x.defaultSlottedNodes && x.defaultSlottedNodes.length\n    ? \"label\"\n    : \"label label__hidden\"}\"\n        >\n            <slot\n                ${slotted({ property: \"defaultSlottedNodes\", filter: whitespaceFilter })}\n            ></slot>\n        </label>\n        <div class=\"root\" part=\"root\" ${ref(\"root\")}>\n            ${startSlotTemplate(context, definition)}\n            <div class=\"input-wrapper\" part=\"input-wrapper\">\n                <input\n                    class=\"control\"\n                    part=\"control\"\n                    id=\"control\"\n                    @input=\"${x => x.handleTextInput()}\"\n                    @change=\"${x => x.handleChange()}\"\n                    ?autofocus=\"${x => x.autofocus}\"\n                    ?disabled=\"${x => x.disabled}\"\n                    list=\"${x => x.list}\"\n                    maxlength=\"${x => x.maxlength}\"\n                    minlength=\"${x => x.minlength}\"\n                    pattern=\"${x => x.pattern}\"\n                    placeholder=\"${x => x.placeholder}\"\n                    ?readonly=\"${x => x.readOnly}\"\n                    ?required=\"${x => x.required}\"\n                    size=\"${x => x.size}\"\n                    ?spellcheck=\"${x => x.spellcheck}\"\n                    :value=\"${x => x.value}\"\n                    type=\"search\"\n                    aria-atomic=\"${x => x.ariaAtomic}\"\n                    aria-busy=\"${x => x.ariaBusy}\"\n                    aria-controls=\"${x => x.ariaControls}\"\n                    aria-current=\"${x => x.ariaCurrent}\"\n                    aria-describedby=\"${x => x.ariaDescribedby}\"\n                    aria-details=\"${x => x.ariaDetails}\"\n                    aria-disabled=\"${x => x.ariaDisabled}\"\n                    aria-errormessage=\"${x => x.ariaErrormessage}\"\n                    aria-flowto=\"${x => x.ariaFlowto}\"\n                    aria-haspopup=\"${x => x.ariaHaspopup}\"\n                    aria-hidden=\"${x => x.ariaHidden}\"\n                    aria-invalid=\"${x => x.ariaInvalid}\"\n                    aria-keyshortcuts=\"${x => x.ariaKeyshortcuts}\"\n                    aria-label=\"${x => x.ariaLabel}\"\n                    aria-labelledby=\"${x => x.ariaLabelledby}\"\n                    aria-live=\"${x => x.ariaLive}\"\n                    aria-owns=\"${x => x.ariaOwns}\"\n                    aria-relevant=\"${x => x.ariaRelevant}\"\n                    aria-roledescription=\"${x => x.ariaRoledescription}\"\n                    ${ref(\"control\")}\n                />\n                <slot name=\"close-button\">\n                    <${context.tagFor(Button)} appearance=\"stealth\" class=\"clear-button ${x => x.value\n    ? \"\"\n    : \"clear-button__hidden\"}\" part=\"clear-button\" tabindex=\"-1\" @click=${x => x.handleClearInput()}>\n                        <slot name=\"close-glyph\">\n                            <svg width=\"9\" height=\"9\" viewBox=\"0 0 9 9\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M0.146447 0.146447C0.338683 -0.0478972 0.645911 -0.0270359 0.853553 0.146447L4.5 3.793L8.14645 0.146447C8.34171 -0.0488155 8.65829 -0.0488155 8.85355 0.146447C9.04882 0.341709 9.04882 0.658291 8.85355 0.853553L5.207 4.5L8.85355 8.14645C9.05934 8.35223 9.03129 8.67582 8.85355 8.85355C8.67582 9.03129 8.35409 9.02703 8.14645 8.85355L4.5 5.207L0.853553 8.85355C0.658291 9.04882 0.341709 9.04882 0.146447 8.85355C-0.0488155 8.65829 -0.0488155 8.34171 0.146447 8.14645L3.793 4.5L0.146447 0.853553C-0.0268697 0.680237 -0.0457894 0.34079 0.146447 0.146447Z\"/>\n                            </svg>\n                        </slot>\n                    </${context.tagFor(Button)}>\n                </slot>\n            </div>\n            ${endSlotTemplate(context, definition)}\n        </div>\n    </template>\n`;\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\nimport { Listbox } from \"../listbox/listbox\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Select:class)} component.\n * @public\n */\nexport const selectTemplate = (context, definition) => html `\n    <template\n        class=\"${x => (x.open ? \"open\" : \"\")} ${x => x.disabled ? \"disabled\" : \"\"} ${x => x.position}\"\n        aria-activedescendant=\"${x => x.ariaActiveDescendant}\"\n        aria-controls=\"${x => x.ariaControls}\"\n        aria-disabled=\"${x => x.ariaDisabled}\"\n        aria-expanded=\"${x => x.ariaExpanded}\"\n        aria-haspopup=\"listbox\"\n        role=\"combobox\"\n        tabindex=\"${x => (!x.disabled ? \"0\" : null)}\"\n        @click=\"${(x, c) => x.clickHandler(c.event)}\"\n        @focusout=\"${(x, c) => x.focusoutHandler(c.event)}\"\n        @keydown=\"${(x, c) => x.keydownHandler(c.event)}\"\n    >\n        <div class=\"control\" part=\"control\" ?disabled=\"${x => x.disabled}\">\n            ${startSlotTemplate(context, definition)}\n            <slot name=\"button-container\">\n                <div class=\"selected-value\" part=\"selected-value\">\n                    <slot name=\"selected-value\">${x => x.displayValue}</slot>\n                </div>\n                <div aria-hidden=\"true\" class=\"indicator\" part=\"indicator\">\n                    <slot name=\"indicator\">\n                        ${definition.indicator || \"\"}\n                    </slot>\n                </div>\n            </slot>\n            ${endSlotTemplate(context, definition)}\n        </div>\n        <div\n            class=\"listbox\"\n            part=\"listbox\"\n            role=\"listbox\"\n            ?disabled=\"${x => x.disabled}\"\n            ?hidden=\"${x => !x.open}\"\n            ${ref(\"listbox\")}\n        >\n            <slot\n                ${slotted({\n    filter: Listbox.slottedOptionFilter,\n    flatten: true,\n    property: \"slottedOptions\",\n})}\n            ></slot>\n        </div>\n    </template>\n`;\n","import { html, ref, when } from \"@microsoft/fast-element\";\nimport { Orientation } from \"@microsoft/fast-web-utilities\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(SliderLabel:class)} component.\n * @public\n */\nexport const sliderLabelTemplate = (context, definition) => html `\n    <template\n        aria-disabled=\"${x => x.disabled}\"\n        class=\"${x => x.sliderOrientation || Orientation.horizontal}\n            ${x => (x.disabled ? \"disabled\" : \"\")}\"\n    >\n        <div ${ref(\"root\")} part=\"root\" class=\"root\" style=\"${x => x.positionStyle}\">\n            <div class=\"container\">\n                ${when(x => !x.hideMark, html `\n                        <div class=\"mark\"></div>\n                    `)}\n                <div class=\"label\">\n                    <slot></slot>\n                </div>\n            </div>\n        </div>\n    </template>\n`;\n","import { html, ref } from \"@microsoft/fast-element\";\nimport { Orientation } from \"@microsoft/fast-web-utilities\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Slider:class)} component.\n * @public\n */\nexport const sliderTemplate = (context, definition) => html `\n    <template\n        role=\"slider\"\n        class=\"${x => (x.readOnly ? \"readonly\" : \"\")}\n        ${x => x.orientation || Orientation.horizontal}\"\n        tabindex=\"${x => (x.disabled ? null : 0)}\"\n        aria-valuetext=\"${x => x.valueTextFormatter(x.value)}\"\n        aria-valuenow=\"${x => x.value}\"\n        aria-valuemin=\"${x => x.min}\"\n        aria-valuemax=\"${x => x.max}\"\n        aria-disabled=\"${x => (x.disabled ? true : void 0)}\"\n        aria-readonly=\"${x => (x.readOnly ? true : void 0)}\"\n        aria-orientation=\"${x => x.orientation}\"\n        class=\"${x => x.orientation}\"\n    >\n        <div part=\"positioning-region\" class=\"positioning-region\">\n            <div ${ref(\"track\")} part=\"track-container\" class=\"track\">\n                <slot name=\"track\"></slot>\n            </div>\n            <slot></slot>\n            <div\n                ${ref(\"thumb\")}\n                part=\"thumb-container\"\n                class=\"thumb-container\"\n                style=\"${x => x.position}\"\n            >\n                <slot name=\"thumb\">${definition.thumb || \"\"}</slot>\n            </div>\n        </div>\n    </template>\n`;\n","import { html } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#Tab} component.\n * @public\n */\nexport const tabTemplate = (context, definition) => html `\n    <template slot=\"tab\" role=\"tab\" aria-disabled=\"${x => x.disabled}\">\n        <slot></slot>\n    </template>\n`;\n","import { html, ref, slotted, when } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Tabs:class)} component.\n * @public\n */\nexport const tabsTemplate = (context, definition) => html `\n    <template class=\"${x => x.orientation}\">\n        ${startSlotTemplate(context, definition)}\n        <div class=\"tablist\" part=\"tablist\" role=\"tablist\">\n            <slot class=\"tab\" name=\"tab\" part=\"tab\" ${slotted(\"tabs\")}></slot>\n\n            ${when(x => x.showActiveIndicator, html `\n                    <div\n                        ${ref(\"activeIndicatorRef\")}\n                        class=\"activeIndicator\"\n                        part=\"activeIndicator\"\n                    ></div>\n                `)}\n        </div>\n        ${endSlotTemplate(context, definition)}\n        <div class=\"tabpanel\">\n            <slot name=\"tabpanel\" part=\"tabpanel\" ${slotted(\"tabpanels\")}></slot>\n        </div>\n    </template>\n`;\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns\";\nimport { whitespaceFilter } from \"../utilities\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(TextField:class)} component.\n * @public\n */\nexport const textFieldTemplate = (context, definition) => html `\n    <template\n        class=\"\n            ${x => (x.readOnly ? \"readonly\" : \"\")}\n        \"\n    >\n        <label\n            part=\"label\"\n            for=\"control\"\n            class=\"${x => x.defaultSlottedNodes && x.defaultSlottedNodes.length\n    ? \"label\"\n    : \"label label__hidden\"}\"\n        >\n            <slot\n                ${slotted({ property: \"defaultSlottedNodes\", filter: whitespaceFilter })}\n            ></slot>\n        </label>\n        <div class=\"root\" part=\"root\">\n            ${startSlotTemplate(context, definition)}\n            <input\n                class=\"control\"\n                part=\"control\"\n                id=\"control\"\n                @input=\"${x => x.handleTextInput()}\"\n                @change=\"${x => x.handleChange()}\"\n                ?autofocus=\"${x => x.autofocus}\"\n                ?disabled=\"${x => x.disabled}\"\n                list=\"${x => x.list}\"\n                maxlength=\"${x => x.maxlength}\"\n                minlength=\"${x => x.minlength}\"\n                pattern=\"${x => x.pattern}\"\n                placeholder=\"${x => x.placeholder}\"\n                ?readonly=\"${x => x.readOnly}\"\n                ?required=\"${x => x.required}\"\n                size=\"${x => x.size}\"\n                ?spellcheck=\"${x => x.spellcheck}\"\n                :value=\"${x => x.value}\"\n                type=\"${x => x.type}\"\n                aria-atomic=\"${x => x.ariaAtomic}\"\n                aria-busy=\"${x => x.ariaBusy}\"\n                aria-controls=\"${x => x.ariaControls}\"\n                aria-current=\"${x => x.ariaCurrent}\"\n                aria-describedby=\"${x => x.ariaDescribedby}\"\n                aria-details=\"${x => x.ariaDetails}\"\n                aria-disabled=\"${x => x.ariaDisabled}\"\n                aria-errormessage=\"${x => x.ariaErrormessage}\"\n                aria-flowto=\"${x => x.ariaFlowto}\"\n                aria-haspopup=\"${x => x.ariaHaspopup}\"\n                aria-hidden=\"${x => x.ariaHidden}\"\n                aria-invalid=\"${x => x.ariaInvalid}\"\n                aria-keyshortcuts=\"${x => x.ariaKeyshortcuts}\"\n                aria-label=\"${x => x.ariaLabel}\"\n                aria-labelledby=\"${x => x.ariaLabelledby}\"\n                aria-live=\"${x => x.ariaLive}\"\n                aria-owns=\"${x => x.ariaOwns}\"\n                aria-relevant=\"${x => x.ariaRelevant}\"\n                aria-roledescription=\"${x => x.ariaRoledescription}\"\n                ${ref(\"control\")}\n            />\n            ${endSlotTemplate(context, definition)}\n        </div>\n    </template>\n`;\n"],"names":[],"sourceRoot":""}