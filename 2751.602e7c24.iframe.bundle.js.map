{"version":3,"file":"2751.602e7c24.iframe.bundle.js","mappings":";;AAQA;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;ACQA;;AAEA;AACA;;;;;;AAgBA;ACvBA;;;;;;AAMA;AACA;;;AAGA;AACA;;;;;AAKA;;;;;;;;;AASA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;;;;AAIA;AAvEA;;;AAuEA;AA5EA;;;AA4EA;ACzEA;;AAEA;AACA;AACA;;;;;;;;ACFA;;;;;;;AAOA;AACA;AACA;;AAEA;;;AAGA;AACA;;;;;;;;ACbA;;;;;;;AAOA;;;;;;;;;;;ACXA;;;AAGA;AACA;;;;;;AAMA;;AAEA;;;ACVA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;AAOA;;;;;;;;AAQA;;AAEA;;AAEA;AACA;;;AC3BA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAeA;AACA;AACA;;;;AAIA;;;;;;;;;;;;AAYA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;;;AAIA;;;;;;;;;;;;;;;;;;AAkBA;AACA;;;;AAIA;AACA;;;;AAIA;AACA;;;;;;;;;AASA;;;;AAIA;;;;;;;AAOA;;;;AAIA;;;;AAIA;;AAEA;;;;AAIA;AACA;;;;;AAKA;AACA;;;;;;;;;;;AAWA;AACA;;;AAGA;AACA;;;AAGA;;ACzJA;AC5BA;;;AAGA;AACA;AACA;;;;;;;;;AASA;;;;;;AAMA;;;;;;;;;;AAUA;;;;;;;;;;;;AAYA;;;;AAIA;;;;;;;;;;;;;;;;;AAiBA;;;AAGA;;;AAGA;;;AAGA;;;AAGA;;;AC5EA;;;AAGA;AACA;;;;AAIA;AACA;;;;;;;;;AASA;AACA;;;;;;;;AAQA;;;;;;;;;;;AAWA;AACA;;;;;;;;;;AAUA;AACA;;;;;;;;;AASA;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;;;AAGA;AACA;;;;;;AAMA;;;;;AAKA;;;ACrHA;;AAEA;;;;;;;;;;;;;;ACOA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAeA;AACA;AACA;;;;;;;;AAQA;;;;;;;;;;;AAWA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;;;;;;;;;AAYA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;;;;AAIA;AACA;;;;AAIA;AACA;;;;;;;;;;;;;;;;;;;;AAoBA;;;;AAIA;;;;;;;AAOA;;;;AAIA;;;;AAIA;;AAEA;;;;AAIA;AACA;;;;;AAKA;AACA;;;;;;;;;;;AAWA;AACA;;;AAGA;AACA;;;AAGA;;ACjMA;;;;;ACzBA;;;;;;;;;;AAeA;;;;;;AAMA;;;;;;;;;;;;;AAaA;;;AAQA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;;;;AAIA;;AAEA;;;AAGA;;;;;;;AAOA;;;AAGA;;;AC1FA;;AAEA;AACA;AACA;;;ACHA;AACA;;;;;;;;AAQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;AAMA;AACA;;;;AAIA;AACA;;;;AAIA;;;;;;;AAOA;AACA;;;;AAIA;;;;AAIA;;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;;;;;;;;;;;;;AAaA;;;AAGA;;;AAGA;;;;;;;;;;AAUA;;;;ACpEA;AC7BA;AACA;;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AAeA;AACA;AACA;;;;AAIA;;;;;;;;AAQA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;AACA;;;;AAIA;AACA;;;;AAIA;AACA;;;;AAIA;;;;AAIA;;;;;;;AAOA;;;;AAIA;;;;AAIA;;AAEA;;;;AAIA;AACA;;;;;AAKA;AACA;;;;;;;;;;;AAWA;AACA;;;AAGA;AACA;;;AAGA;;ACzHA;AC7BA;;;;AAIA;AACA;;;;;AAKA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA;AACA;AACA;;;AC3BA;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;;;;;AAOA;;;;;;;;AAQA;AACA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;AACA;;;;AAIA;AACA;;;;AAIA;AACA;;;;AAIA;AACA;;;;AAIA;;;;AAIA;AClFA;;;;;;;;;;;ACAA;;;;;AAKA;;;;;AAKA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;;;AAGA;;;AAGA;;;;;;;AAOA;;AAEA;;;;;;;ACpCA;AACA;;;ACFA;AACA;;;;;;ACAA;;AAEA;;;;;AAKA;AACA;;AAEA;;;;;;ACXA;AACA;;;;;;ACEA;ACHA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;ADlCA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;;AEVA;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;AAGA;;;;;AAKA;;AAIA;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;;;;AAIA;;;AAGA;AACA;AACA;AACA;AACA;;;;AAIA;;;;AAIA;;;;AAIA;;;AAGA;AACA;AACA;;;AAGA;;;;;;ACjDA;;AAOA;;AAEA;;AAcA;;;ACrBA;;AAEA;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;;AAEA;AACA;AACA;AAEA;;;AAaA;AACA;AACA;AACA;;AAKA;;AAEA;ACxCA;AACA;AACA;AACA;AACA;AAEA;;;;AAcA;AACA;AACA;;;;AAOA;AC5BA;;;ACEA;AACA;AACA;AACA;AACA;AACA;;;AAKA;;AAEA;;AAEA;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;;;;;AAKA;;;;AAIA;;;;;;AAMA;;;;AAIA;AACA;;;;;;;AAOA;;;;;AAKA;AACA;AACA;;;;;;;AAOA;AACA;AACA;;;;AAIA;;;;;ACnEA;;AAEA;AACA;;AAEA;;;ACLA;;;;AAIA;;AAIA;;;AAGA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;;;;AAMA;;;AAGA;;;;;AAKA;;;;;;ACzDA;AACA;;AAEA;AACA;;;AAUA;;;AAGA;AACA;;;;AAIA;AACA;;AAEA;;;AAWA;AACA;;;AAGA;AACA;;;AAWA;AACA;;;AAGA;AACA;;;;;;ACvEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;AAiBA;;;;;;AAOA;;AAEA;;;;;;;AChCA;AACA;AACA;AACA;;AAEA;;;;;AAKA;;;AAGA;;;AAGA;AACA;;;;;;;;AChBA;AACA;AACA;AACA;AACA;;;;AAIA;;;;AAIA;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;;;AAKA;;AAIA;;;;;;ACjBA;;;;;;AAMA;;;AAKA;;;AAGA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;;AAGA;;;;;;;;;;;;;;;;;AAiBA;;;;;AChFA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;;AAEA;;;AAGA;;;;AAIA;;;;AAIA;;;;;AAKA;;;AAGA;AACA;AACA;;;AAGA;;;;;;ACvDA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;;;;AAMA;;;AAGA;;AAEA;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAIA;;;AAGA;;;;;;;;;;;;;;;;ACnBA;;;;ACCA;AACA;;AAEA;;AAEA;;AAEA;;;;;;AAMA;;AAEA;;;;;;ACbA;AACA;;;;;AAKA;;AAIA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AClDA;;;;;;AAMA;;;AAKA;;;;AAIA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;ACzDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AASA;;AAEA;;AAKA;;;;ACzBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;;;;;ACnBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAOA;;;;;AAKA;AACA;;;AAGA;;;;AAIA;;AAEA;;;AAGA;;AAIA;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;ACVA;;AAEA;AACA;ACFA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;;;AAIA;;AAEA;;AC1YA;AACA;;;AAGA","sources":["webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/accordion/accordion.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/avatar/index.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/avatar/avatar.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/breadcrumb/breadcrumb.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/card/card.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/data-grid/data-grid-row.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/divider/divider.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/menu/menu.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/number-field/number-field.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/number-field/index.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/progress-ring/progress-ring.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/progress/progress.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/radio-group/radio-group.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/search/search.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/search/index.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/slider-label/slider-label.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/tab-panel/tab-panel.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/text-area/text-area.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/text-area/index.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/text-field/text-field.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/text-field/index.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/toolbar/toolbar.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/toolbar/index.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/tooltip/tooltip.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-components/dist/esm/tree-view/tree-view.styles.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/accordion-item/accordion-item.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/accordion/accordion.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/anchored-region/anchored-region.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/avatar/avatar.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/badge/badge.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/breadcrumb-item/breadcrumb-item.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/anchor/anchor.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/breadcrumb/breadcrumb.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/button/button.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/checkbox/checkbox.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/combobox/combobox.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/data-grid/data-grid-cell.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/data-grid/data-grid-cell.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/data-grid/data-grid-row.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/data-grid/data-grid.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/divider/divider.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/listbox-option/listbox-option.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/menu-item/menu-item.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/menu/menu.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/number-field/number-field.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/patterns/start-end.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/progress-ring/progress-ring.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/progress/progress.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/radio-group/radio-group.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/radio/radio.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/search/search.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/select/select.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/slider-label/slider-label.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/slider/slider.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/switch/switch.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/tab/tab.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/tabs/tabs.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/text-area/text-area.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/text-field/text-field.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/toolbar/toolbar.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/tooltip/tooltip.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/tree-item/tree-item.template.js","webpack://@jupyter/web-components/../../node_modules/@microsoft/fast-foundation/dist/esm/tree-view/tree-view.template.js","webpack://@jupyter/web-components/../../node_modules/@storybook/addon-backgrounds/dist/chunk-GRJZJKJ4.mjs","webpack://@jupyter/web-components/../../node_modules/@storybook/addon-outline/dist/preview.mjs","webpack://@jupyter/web-components/../../node_modules/@storybook/html/dist/chunk-JHBKUHDQ.mjs"],"sourcesContent":["import { css } from \"@microsoft/fast-element\";\nimport { display } from \"@microsoft/fast-foundation\";\nimport { bodyFont, neutralForegroundRest, neutralStrokeDividerRest, strokeWidth, typeRampMinus1FontSize, typeRampMinus1LineHeight, } from \"../design-tokens.js\";\n/**\n * Styles for Accordion\n * @public\n */\nexport const accordionStyles = (context, definition) => css `\n        ${display(\"flex\")} :host {\n            box-sizing: border-box;\n            flex-direction: column;\n            font-family: ${bodyFont};\n            font-size: ${typeRampMinus1FontSize};\n            line-height: ${typeRampMinus1LineHeight};\n            color: ${neutralForegroundRest};\n            border-top: calc(${strokeWidth} * 1px) solid ${neutralStrokeDividerRest};\n        }\n    `;\n","import { __decorate } from \"tslib\";\nimport { attr, html, when } from \"@microsoft/fast-element\";\nimport { Avatar as FoundationAvatar, avatarTemplate as template, } from \"@microsoft/fast-foundation\";\nimport { avatarStyles as styles } from \"./avatar.styles.js\";\n/**\n * The FAST Avatar Class\n * @public\n *\n */\nexport class Avatar extends FoundationAvatar {\n}\n__decorate([\n    attr({ attribute: \"src\" })\n], Avatar.prototype, \"imgSrc\", void 0);\n__decorate([\n    attr\n], Avatar.prototype, \"alt\", void 0);\n/**\n * The FAST Avatar Template for Images\n *  @public\n *\n */\nexport const imgTemplate = html `\n    ${when(x => x.imgSrc, html `\n            <img\n                src=\"${x => x.imgSrc}\"\n                alt=\"${x => x.alt}\"\n                slot=\"media\"\n                class=\"media\"\n                part=\"media\"\n            />\n        `)}\n`;\n/**\n * A function that returns a {@link @microsoft/fast-foundation#Avatar} registration for configuring the component with a DesignSystem.\n *  {@link @microsoft/fast-foundation#avatarTemplate}\n *\n *\n * @public\n * @remarks\n * Generates HTML Element: `<fast-avatar>`\n */\nexport const fastAvatar = Avatar.compose({\n    baseName: \"avatar\",\n    baseClass: FoundationAvatar,\n    template,\n    styles,\n    media: imgTemplate,\n    shadowOptions: {\n        delegatesFocus: true,\n    },\n});\nexport { styles as avatarStyles };\n","import { css } from \"@microsoft/fast-element\";\nimport { Badge, display, } from \"@microsoft/fast-foundation\";\nimport { baseHeightMultiplier, controlCornerRadius, density, designUnit, neutralForegroundRest, typeRampBaseFontSize, } from \"../design-tokens.js\";\nimport { DirectionalStyleSheetBehavior } from \"../styles/direction.js\";\nconst rtl = (context, definition) => css `\n    ::slotted(${context.tagFor(Badge)}) {\n        left: 0;\n    }\n`;\nconst ltr = (context, definition) => css `\n    ::slotted(${context.tagFor(Badge)}) {\n        right: 0;\n    }\n`;\n/**\n * Styles for Avatar\n * @public\n */\nexport const avatarStyles = (context, definition) => css `\n        ${display(\"flex\")} :host {\n            position: relative;\n            height: var(--avatar-size, var(--avatar-size-default));\n            max-width: var(--avatar-size, var(--avatar-size-default));\n            --avatar-size-default: calc(\n                (\n                        (${baseHeightMultiplier} + ${density}) * ${designUnit} +\n                            ((${designUnit} * 8) - 40)\n                    ) * 1px\n            );\n            --avatar-text-size: ${typeRampBaseFontSize};\n            --avatar-text-ratio: ${designUnit};\n        }\n\n        .link {\n            text-decoration: none;\n            color: ${neutralForegroundRest};\n            display: flex;\n            flex-direction: row;\n            justify-content: center;\n            align-items: center;\n            min-width: 100%;\n        }\n\n        .square {\n            border-radius: calc(${controlCornerRadius} * 1px);\n            min-width: 100%;\n            overflow: hidden;\n        }\n\n        .circle {\n            border-radius: 100%;\n            min-width: 100%;\n            overflow: hidden;\n        }\n\n        .backplate {\n            position: relative;\n            display: flex;\n        }\n\n        .media,\n        ::slotted(img) {\n            max-width: 100%;\n            position: absolute;\n            display: block;\n        }\n\n        .content {\n            font-size: calc(\n                (var(--avatar-text-size) + var(--avatar-size, var(--avatar-size-default))) /\n                    var(--avatar-text-ratio)\n            );\n            line-height: var(--avatar-size, var(--avatar-size-default));\n            display: block;\n            min-height: var(--avatar-size, var(--avatar-size-default));\n        }\n\n        ::slotted(${context.tagFor(Badge)}) {\n            position: absolute;\n            display: block;\n        }\n    `.withBehaviors(new DirectionalStyleSheetBehavior(ltr(context, definition), rtl(context, definition)));\n","import { css } from \"@microsoft/fast-element\";\nimport { display } from \"@microsoft/fast-foundation\";\nimport { bodyFont, typeRampBaseFontSize, typeRampBaseLineHeight, } from \"../design-tokens.js\";\n/**\n * Styles for Breadcrumb\n * @public\n */\nexport const breadcrumbStyles = (context, definition) => css `\n    ${display(\"inline-block\")} :host {\n        box-sizing: border-box;\n        font-family: ${bodyFont};\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n    }\n\n    .list {\n        display: flex;\n        flex-wrap: wrap;\n    }\n`;\n","import { css } from \"@microsoft/fast-element\";\nimport { display, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { controlCornerRadius, fillColor } from \"../design-tokens.js\";\nimport { elevation } from \"../styles/index.js\";\n/**\n * Styles for Card\n * @public\n */\nexport const cardStyles = (context, definition) => css `\n        ${display(\"block\")} :host {\n            --elevation: 4;\n            display: block;\n            contain: content;\n            height: var(--card-height, 100%);\n            width: var(--card-width, 100%);\n            box-sizing: border-box;\n            background: ${fillColor};\n            border-radius: calc(${controlCornerRadius} * 1px);\n            ${elevation}\n        }\n    `.withBehaviors(forcedColorsStylesheetBehavior(css `\n                :host {\n                    forced-color-adjust: none;\n                    background: ${SystemColors.Canvas};\n                    box-shadow: 0 0 0 1px ${SystemColors.CanvasText};\n                }\n            `));\n","import { css } from \"@microsoft/fast-element\";\nimport { neutralFillRest, neutralStrokeDividerRest, strokeWidth, } from \"../design-tokens.js\";\n/**\n * Styles for Data Grid row\n * @public\n */\nexport const dataGridRowStyles = (context, definition) => css `\n    :host {\n        display: grid;\n        padding: 1px 0;\n        box-sizing: border-box;\n        width: 100%;\n        border-bottom: calc(${strokeWidth} * 1px) solid ${neutralStrokeDividerRest};\n    }\n\n    :host(.header) {\n    }\n\n    :host(.sticky-header) {\n        background: ${neutralFillRest};\n        position: sticky;\n        top: 0;\n    }\n`;\n","import { css } from \"@microsoft/fast-element\";\nimport { display } from \"@microsoft/fast-foundation\";\nimport { designUnit, neutralStrokeDividerRest, strokeWidth } from \"../design-tokens.js\";\n/**\n * Styles for Divider\n * @public\n */\nexport const dividerStyles = (context, definition) => css `\n        ${display(\"block\")} :host {\n            box-sizing: content-box;\n            height: 0;\n            margin: calc(${designUnit} * 1px) 0;\n            border-top: calc(${strokeWidth} * 1px) solid ${neutralStrokeDividerRest};\n            border-left: none;\n        }\n\n        :host([orientation=\"vertical\"]) {\n            height: 100%;\n            margin: 0 calc(${designUnit} * 1px);\n            border-top: none;\n            border-left: calc(${strokeWidth} * 1px) solid ${neutralStrokeDividerRest};\n        }\n    `;\n","import { css } from \"@microsoft/fast-element\";\nimport { display, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { controlCornerRadius, designUnit, fillColor, neutralStrokeDividerRest, strokeWidth, } from \"../design-tokens.js\";\nimport { elevation } from \"../styles/index.js\";\n/**\n * Styles for Menu\n * @public\n */\nexport const menuStyles = (context, definition) => css `\n        ${display(\"block\")} :host {\n            --elevation: 11;\n            background: ${fillColor};\n            border: calc(${strokeWidth} * 1px) solid transparent;\n            ${elevation}\n            margin: 0;\n            border-radius: calc(${controlCornerRadius} * 1px);\n            padding: calc(${designUnit} * 1px) 0;\n            max-width: 368px;\n            min-width: 64px;\n        }\n\n        :host([slot=\"submenu\"]) {\n            width: max-content;\n            margin: 0 calc(${designUnit} * 1px);\n        }\n\n        ::slotted(hr) {\n            box-sizing: content-box;\n            height: 0;\n            margin: 0;\n            border: none;\n            border-top: calc(${strokeWidth} * 1px) solid ${neutralStrokeDividerRest};\n        }\n    `.withBehaviors(forcedColorsStylesheetBehavior(css `\n                :host {\n                    background: ${SystemColors.Canvas};\n                    border-color: ${SystemColors.CanvasText};\n                }\n            `));\n","import { css } from \"@microsoft/fast-element\";\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { accentFillActive, accentFillHover, accentFillRest, bodyFont, controlCornerRadius, designUnit, disabledOpacity, focusStrokeOuter, focusStrokeWidth, neutralFillHover, neutralFillInputHover, neutralFillInputRest, neutralFillRest, neutralForegroundRest, neutralStrokeRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from \"../design-tokens.js\";\nimport { heightNumber } from \"../styles/index.js\";\n/**\n * Styles for Number Field\n * @public\n */\nexport const numberFieldStyles = (context, definition) => css `\n    ${display(\"inline-block\")} :host {\n        font-family: ${bodyFont};\n        outline: none;\n        user-select: none;\n    }\n\n    .root {\n        box-sizing: border-box;\n        position: relative;\n        display: flex;\n        flex-direction: row;\n        color: ${neutralForegroundRest};\n        background: ${neutralFillInputRest};\n        border-radius: calc(${controlCornerRadius} * 1px);\n        border: calc(${strokeWidth} * 1px) solid ${accentFillRest};\n        height: calc(${heightNumber} * 1px);\n        align-items: baseline;\n    }\n\n    .control {\n        -webkit-appearance: none;\n        font: inherit;\n        background: transparent;\n        border: 0;\n        color: inherit;\n        height: calc(100% - 4px);\n        width: 100%;\n        margin-top: auto;\n        margin-bottom: auto;\n        border: none;\n        padding: 0 calc(${designUnit} * 2px + 1px);\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n    }\n\n    .control:hover,\n    .control:${focusVisible},\n    .control:disabled,\n    .control:active {\n        outline: none;\n    }\n\n    .controls {\n        opacity: 0;\n    }\n\n    .label {\n        display: block;\n        color: ${neutralForegroundRest};\n        cursor: pointer;\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n        margin-bottom: 4px;\n    }\n\n    .label__hidden {\n        display: none;\n        visibility: hidden;\n    }\n\n    .start,\n    .control,\n    .controls,\n    .end {\n        align-self: center;\n    }\n\n    .start,\n    .end {\n        margin: auto;\n        fill: currentcolor;\n    }\n\n    .step-up-glyph,\n    .step-down-glyph {\n        display: block;\n        padding: 4px 10px;\n        cursor: pointer;\n    }\n\n    .step-up-glyph:before,\n    .step-down-glyph:before {\n        content: '';\n        display: block;\n        border: solid transparent 6px;\n    }\n\n    .step-up-glyph:before {\n        border-bottom-color: ${neutralForegroundRest};\n    }\n\n    .step-down-glyph:before {\n        border-top-color: ${neutralForegroundRest};\n    }\n\n    ::slotted(svg) {\n        /* TODO: adaptive typography https://github.com/microsoft/fast/issues/2432 */\n        width: 16px;\n        height: 16px;\n    }\n\n    .start {\n        margin-inline-start: 11px;\n    }\n\n    .end {\n        margin-inline-end: 11px;\n    }\n\n    :host(:hover:not([disabled])) .root {\n        background: ${neutralFillInputHover};\n        border-color: ${accentFillHover};\n    }\n\n    :host(:active:not([disabled])) .root {\n        background: ${neutralFillInputHover};\n        border-color: ${accentFillActive};\n    }\n\n    :host(:focus-within:not([disabled])) .root {\n        border-color: ${focusStrokeOuter};\n        box-shadow: 0 0 0 calc(${focusStrokeWidth} * 1px) ${focusStrokeOuter} inset;\n    }\n\n    :host(:hover:not([disabled])) .controls,\n    :host(:focus-within:not([disabled])) .controls {\n        opacity: 1;\n    }\n\n    :host([appearance=\"filled\"]) .root {\n        background: ${neutralFillRest};\n    }\n\n    :host([appearance=\"filled\"]:hover:not([disabled])) .root {\n        background: ${neutralFillHover};\n    }\n\n    :host([disabled]) .label,\n    :host([readonly]) .label,\n    :host([readonly]) .control,\n    :host([disabled]) .control {\n        cursor: ${disabledCursor};\n    }\n\n    :host([disabled]) {\n        opacity: ${disabledOpacity};\n    }\n\n    :host([disabled]) .control {\n        border-color: ${neutralStrokeRest};\n    }\n`.withBehaviors(forcedColorsStylesheetBehavior(css `\n                .root,\n                :host([appearance=\"filled\"]) .root {\n                    forced-color-adjust: none;\n                    background: ${SystemColors.Field};\n                    border-color: ${SystemColors.FieldText};\n                }\n                :host(:hover:not([disabled])) .root,\n                :host([appearance=\"filled\"]:hover:not([disabled])) .root,\n                :host([appearance=\"filled\"]:hover) .root {\n                    background: ${SystemColors.Field};\n                    border-color: ${SystemColors.Highlight};\n                }\n                .start,\n                .end {\n                    fill: currentcolor;\n                }\n                :host([disabled]) {\n                    opacity: 1;\n                }\n                :host([disabled]) .root,\n                :host([appearance=\"filled\"]:hover[disabled]) .root {\n                    border-color: ${SystemColors.GrayText};\n                    background: ${SystemColors.Field};\n                }\n                :host(:focus-within:enabled) .root {\n                    border-color: ${SystemColors.Highlight};\n                    box-shadow: 0 0 0 1px ${SystemColors.Highlight} inset;\n                }\n                input::placeholder {\n                    color: ${SystemColors.GrayText};\n                }\n            `));\n","import { __decorate } from \"tslib\";\nimport { attr } from \"@microsoft/fast-element\";\nimport { NumberField as FoundationNumberField, numberFieldTemplate as template, } from \"@microsoft/fast-foundation\";\nimport { numberFieldStyles as styles } from \"./number-field.styles.js\";\n/**\n * @internal\n */\nexport class NumberField extends FoundationNumberField {\n    constructor() {\n        super(...arguments);\n        /**\n         * The appearance of the element.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: appearance\n         */\n        this.appearance = \"outline\";\n    }\n}\n__decorate([\n    attr\n], NumberField.prototype, \"appearance\", void 0);\n/**\n * A function that returns a {@link @microsoft/fast-foundation#NumberField} registration for configuring the component with a DesignSystem.\n * Implements {@link @microsoft/fast-foundation#numberFieldTemplate}\n *\n *\n * @public\n * @remarks\n * Generates HTML Element: `<fast-number-field>`\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}\n */\nexport const fastNumberField = NumberField.compose({\n    baseName: \"number-field\",\n    baseClass: FoundationNumberField,\n    styles,\n    template,\n    shadowOptions: {\n        delegatesFocus: true,\n    },\n    stepDownGlyph: /* html */ `\n        <span class=\"step-down-glyph\" part=\"step-down-glyph\"></span>\n    `,\n    stepUpGlyph: /* html */ `\n        <span class=\"step-up-glyph\" part=\"step-up-glyph\"></span>\n    `,\n});\nexport { styles as numberFieldStyles };\n","import { css } from \"@microsoft/fast-element\";\nimport { display, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { accentForegroundRest, neutralFillRest, neutralForegroundHint, } from \"../design-tokens.js\";\nimport { heightNumber } from \"../styles/size.js\";\n/**\n * Styles for Progress Ring\n * @public\n */\nexport const progressRingStyles = (context, definition) => css `\n        ${display(\"flex\")} :host {\n            align-items: center;\n            outline: none;\n            height: calc(${heightNumber} * 1px);\n            width: calc(${heightNumber} * 1px);\n            margin: calc(${heightNumber} * 1px) 0;\n        }\n\n        .progress {\n            height: 100%;\n            width: 100%;\n        }\n\n        .background {\n            stroke: ${neutralFillRest};\n            fill: none;\n            stroke-width: 2px;\n        }\n\n        .determinate {\n            stroke: ${accentForegroundRest};\n            fill: none;\n            stroke-width: 2px;\n            stroke-linecap: round;\n            transform-origin: 50% 50%;\n            transform: rotate(-90deg);\n            transition: all 0.2s ease-in-out;\n        }\n\n        .indeterminate-indicator-1 {\n            stroke: ${accentForegroundRest};\n            fill: none;\n            stroke-width: 2px;\n            stroke-linecap: round;\n            transform-origin: 50% 50%;\n            transform: rotate(-90deg);\n            transition: all 0.2s ease-in-out;\n            animation: spin-infinite 2s linear infinite;\n        }\n\n        :host([paused]) .indeterminate-indicator-1 {\n            animation-play-state: paused;\n            stroke: ${neutralFillRest};\n        }\n\n        :host([paused]) .determinate {\n            stroke: ${neutralForegroundHint};\n        }\n\n        @keyframes spin-infinite {\n            0% {\n                stroke-dasharray: 0.01px 43.97px;\n                transform: rotate(0deg);\n            }\n            50% {\n                stroke-dasharray: 21.99px 21.99px;\n                transform: rotate(450deg);\n            }\n            100% {\n                stroke-dasharray: 0.01px 43.97px;\n                transform: rotate(1080deg);\n            }\n        }\n    `.withBehaviors(forcedColorsStylesheetBehavior(css `\n                .indeterminate-indicator-1,\n                .determinate {\n                    stroke: ${SystemColors.FieldText};\n                }\n                .background {\n                    stroke: ${SystemColors.Field};\n                }\n                :host([paused]) .indeterminate-indicator-1 {\n                    stroke: ${SystemColors.Field};\n                }\n                :host([paused]) .determinate {\n                    stroke: ${SystemColors.GrayText};\n                }\n            `));\n","import { css } from \"@microsoft/fast-element\";\nimport { display, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { accentForegroundRest, designUnit, neutralFillRest, neutralForegroundHint, } from \"../design-tokens.js\";\n/**\n * Styles for Progress\n * @public\n */\nexport const progressStyles = (context, definition) => css `\n        ${display(\"flex\")} :host {\n            align-items: center;\n            outline: none;\n            height: calc(${designUnit} * 1px);\n            margin: calc(${designUnit} * 1px) 0;\n        }\n\n        .progress {\n            background-color: ${neutralFillRest};\n            border-radius: calc(${designUnit} * 1px);\n            width: 100%;\n            height: 100%;\n            display: flex;\n            align-items: center;\n            position: relative;\n        }\n\n        .determinate {\n            background-color: ${accentForegroundRest};\n            border-radius: calc(${designUnit} * 1px);\n            height: 100%;\n            transition: all 0.2s ease-in-out;\n            display: flex;\n        }\n\n        .indeterminate {\n            height: 100%;\n            border-radius: calc(${designUnit} * 1px);\n            display: flex;\n            width: 100%;\n            position: relative;\n            overflow: hidden;\n        }\n\n        .indeterminate-indicator-1 {\n            position: absolute;\n            opacity: 0;\n            height: 100%;\n            background-color: ${accentForegroundRest};\n            border-radius: calc(${designUnit} * 1px);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.6, 1);\n            width: 40%;\n            animation: indeterminate-1 2s infinite;\n        }\n\n        .indeterminate-indicator-2 {\n            position: absolute;\n            opacity: 0;\n            height: 100%;\n            background-color: ${accentForegroundRest};\n            border-radius: calc(${designUnit} * 1px);\n            animation-timing-function: cubic-bezier(0.4, 0, 0.6, 1);\n            width: 60%;\n            animation: indeterminate-2 2s infinite;\n        }\n\n        :host([paused]) .indeterminate-indicator-1,\n        :host([paused]) .indeterminate-indicator-2 {\n            animation-play-state: paused;\n            background-color: ${neutralFillRest};\n        }\n\n        :host([paused]) .determinate {\n            background-color: ${neutralForegroundHint};\n        }\n\n        @keyframes indeterminate-1 {\n            0% {\n                opacity: 1;\n                transform: translateX(-100%);\n            }\n            70% {\n                opacity: 1;\n                transform: translateX(300%);\n            }\n            70.01% {\n                opacity: 0;\n            }\n            100% {\n                opacity: 0;\n                transform: translateX(300%);\n            }\n        }\n\n        @keyframes indeterminate-2 {\n            0% {\n                opacity: 0;\n                transform: translateX(-150%);\n            }\n            29.99% {\n                opacity: 0;\n            }\n            30% {\n                opacity: 1;\n                transform: translateX(-150%);\n            }\n            100% {\n                transform: translateX(166.66%);\n                opacity: 1;\n            }\n        }\n    `.withBehaviors(forcedColorsStylesheetBehavior(css `\n                .progress {\n                    forced-color-adjust: none;\n                    background-color: ${SystemColors.Field};\n                    box-shadow: 0 0 0 1px inset ${SystemColors.FieldText};\n                }\n                .determinate,\n                .indeterminate-indicator-1,\n                .indeterminate-indicator-2 {\n                    forced-color-adjust: none;\n                    background-color: ${SystemColors.FieldText};\n                }\n                :host([paused]) .determinate,\n                :host([paused]) .indeterminate-indicator-1,\n                :host([paused]) .indeterminate-indicator-2 {\n                    background-color: ${SystemColors.GrayText};\n                }\n            `));\n","import { css } from \"@microsoft/fast-element\";\nimport { display } from \"@microsoft/fast-foundation\";\nimport { designUnit } from \"../design-tokens.js\";\n/**\n * Styles for Radio Group\n * @public\n */\nexport const radioGroupStyles = (context, definition) => css `\n    ${display(\"flex\")} :host {\n        align-items: flex-start;\n        margin: calc(${designUnit} * 1px) 0;\n        flex-direction: column;\n    }\n    .positioning-region {\n        display: flex;\n        flex-wrap: wrap;\n    }\n    :host([orientation=\"vertical\"]) .positioning-region {\n        flex-direction: column;\n    }\n    :host([orientation=\"horizontal\"]) .positioning-region {\n        flex-direction: row;\n    }\n`;\n","import { css } from \"@microsoft/fast-element\";\nimport { DesignToken } from \"@microsoft/fast-foundation\";\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { accentFillActive, accentFillHover, accentFillRest, bodyFont, controlCornerRadius, density, designUnit, disabledOpacity, fillColor, focusStrokeOuter, neutralFillHover, neutralFillInputHover, neutralFillInputRest, neutralFillRecipe, neutralFillStealthActive, neutralFillStealthHover, neutralFillStealthRecipe, neutralForegroundRest, neutralStrokeRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from \"../design-tokens.js\";\nimport { heightNumber } from \"../styles/index.js\";\nconst clearButtonHover = DesignToken.create(\"clear-button-hover\").withDefault((target) => {\n    const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n    const inputRecipe = neutralFillRecipe.getValueFor(target);\n    return buttonRecipe.evaluate(target, inputRecipe.evaluate(target).hover).hover;\n});\nconst clearButtonActive = DesignToken.create(\"clear-button-active\").withDefault((target) => {\n    const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n    const inputRecipe = neutralFillRecipe.getValueFor(target);\n    return buttonRecipe.evaluate(target, inputRecipe.evaluate(target).hover).active;\n});\nexport const searchStyles = (context, definition) => css `\n    ${display(\"inline-block\")} :host {\n        font-family: ${bodyFont};\n        outline: none;\n        user-select: none;\n    }\n\n    .root {\n        box-sizing: border-box;\n        position: relative;\n        display: flex;\n        flex-direction: row;\n        color: ${neutralForegroundRest};\n        background: ${neutralFillInputRest};\n        border-radius: calc(${controlCornerRadius} * 1px);\n        border: calc(${strokeWidth} * 1px) solid ${accentFillRest};\n        height: calc(${heightNumber} * 1px);\n        align-items: baseline;\n    }\n\n    .control {\n        -webkit-appearance: none;\n        font: inherit;\n        background: transparent;\n        border: 0;\n        color: inherit;\n        height: calc(100% - 4px);\n        width: 100%;\n        margin-top: auto;\n        margin-bottom: auto;\n        border: none;\n        padding: 0 calc(${designUnit} * 2px + 1px);\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n    }\n\n    .control::-webkit-search-cancel-button {\n        -webkit-appearance: none;\n    }\n\n    .control:hover,\n    .control:${focusVisible},\n    .control:disabled,\n    .control:active {\n        outline: none;\n    }\n\n    .clear-button {\n        height: calc(100% - 2px);\n        opacity: 0;\n        margin: 1px;\n        background: transparent;\n        color: ${neutralForegroundRest};\n        fill: currentcolor;\n        border: none;\n        border-radius: calc(${controlCornerRadius} * 1px);\n        min-width: calc(${heightNumber} * 1px);\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n        outline: none;\n        font-family: ${bodyFont};\n        padding: 0 calc((10 + (${designUnit} * 2 * ${density})) * 1px);\n    }\n\n    .clear-button:hover {\n        background: ${neutralFillStealthHover};\n    }\n\n    .clear-button:active {\n        background: ${neutralFillStealthActive};\n    }\n\n    :host([appearance=\"filled\"]) .clear-button:hover {\n        background: ${clearButtonHover};\n    }\n\n    :host([appearance=\"filled\"]) .clear-button:active {\n        background: ${clearButtonActive};\n    }\n\n    .input-wrapper {\n        display: flex;\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n\n    .label {\n        display: block;\n        color: ${neutralForegroundRest};\n        cursor: pointer;\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n        margin-bottom: 4px;\n    }\n\n    .label__hidden {\n        display: none;\n        visibility: hidden;\n    }\n\n    .input-wrapper,\n    .start,\n    .end {\n        align-self: center;\n    }\n\n    .start,\n    .end {\n        display: flex;\n        margin: 1px;\n        fill: currentcolor;\n    }\n\n    ::slotted([slot=\"end\"]) {\n        height: 100%\n    }\n\n    .end {\n        margin-inline-end: 1px;\n        height: calc(100% - 2px);\n    }\n\n    ::slotted(svg) {\n        /* TODO: adaptive typography https://github.com/microsoft/fast/issues/2432 */\n        width: 16px;\n        height: 16px;\n        margin-inline-end: 11px;\n        margin-inline-start: 11px;\n        margin-top: auto;\n        margin-bottom: auto;\n    }\n\n    :host(:hover:not([disabled])) .root {\n        background: ${neutralFillInputHover};\n        border-color: ${accentFillHover};\n    }\n\n    :host(:active:not([disabled])) .root {\n        background: ${neutralFillInputHover};\n        border-color: ${accentFillActive};\n    }\n\n    :host(:focus-within:not([disabled])) .root {\n        border-color: ${focusStrokeOuter};\n        box-shadow: 0 0 0 1px ${focusStrokeOuter} inset;\n    }\n\n    .clear-button__hidden {\n        opacity: 0;\n    }\n\n    :host(:hover:not([disabled], [readOnly])) .clear-button,\n    :host(:active:not([disabled], [readOnly])) .clear-button,\n    :host(:focus-within:not([disabled], [readOnly])) .clear-button {\n        opacity: 1;\n    }\n\n    :host(:hover:not([disabled], [readOnly])) .clear-button__hidden,\n    :host(:active:not([disabled], [readOnly])) .clear-button__hidden,\n    :host(:focus-within:not([disabled], [readOnly])) .clear-button__hidden {\n        opacity: 0;\n    }\n\n    :host([appearance=\"filled\"]) .root {\n        background: ${fillColor};\n    }\n\n    :host([appearance=\"filled\"]:hover:not([disabled])) .root {\n        background: ${neutralFillHover};\n    }\n\n    :host([disabled]) .label,\n    :host([readonly]) .label,\n    :host([readonly]) .control,\n    :host([disabled]) .control {\n        cursor: ${disabledCursor};\n    }\n\n    :host([disabled]) {\n        opacity: ${disabledOpacity};\n    }\n\n    :host([disabled]) .control {\n        border-color: ${neutralStrokeRest};\n    }\n`.withBehaviors(forcedColorsStylesheetBehavior(css `\n                .root,\n                :host([appearance=\"filled\"]) .root {\n                    forced-color-adjust: none;\n                    background: ${SystemColors.Field};\n                    border-color: ${SystemColors.FieldText};\n                }\n                :host(:hover:not([disabled])) .root,\n                :host([appearance=\"filled\"]:hover:not([disabled])) .root,\n                :host([appearance=\"filled\"]:hover) .root {\n                    background: ${SystemColors.Field};\n                    border-color: ${SystemColors.Highlight};\n                }\n                .start,\n                .end {\n                    fill: currentcolor;\n                }\n                :host([disabled]) {\n                    opacity: 1;\n                }\n                :host([disabled]) .root,\n                :host([appearance=\"filled\"]:hover[disabled]) .root {\n                    border-color: ${SystemColors.GrayText};\n                    background: ${SystemColors.Field};\n                }\n                :host(:focus-within:enabled) .root {\n                    border-color: ${SystemColors.Highlight};\n                    box-shadow: 0 0 0 1px ${SystemColors.Highlight} inset;\n                }\n                input::placeholder {\n                    color: ${SystemColors.GrayText};\n                }\n            `));\n","import { __decorate } from \"tslib\";\nimport { attr } from \"@microsoft/fast-element\";\nimport { Search as FoundationSearch, searchTemplate as template, } from \"@microsoft/fast-foundation\";\nimport { searchStyles as styles } from \"./search.styles.js\";\n/**\n * @internal\n */\nexport class Search extends FoundationSearch {\n    constructor() {\n        super(...arguments);\n        /**\n         * The appearance of the element.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: appearance\n         */\n        this.appearance = \"outline\";\n    }\n}\n__decorate([\n    attr\n], Search.prototype, \"appearance\", void 0);\n/**\n * A function that returns a {@link @microsoft/fast-foundation#Search} registration for configuring the component with a DesignSystem.\n * Implements {@link @microsoft/fast-foundation#searchTemplate}\n *\n *\n * @public\n * @remarks\n * Generates HTML Element: \\<fast-search\\>\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}\n */\nexport const fastSearch = Search.compose({\n    baseName: \"search\",\n    baseClass: FoundationSearch,\n    template,\n    styles,\n    shadowOptions: {\n        delegatesFocus: true,\n    },\n});\n/**\n * Styles for Search\n * @public\n */\nexport const searchStyles = styles;\n","import { css } from \"@microsoft/fast-element\";\nimport { display, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { bodyFont, designUnit, disabledOpacity, neutralForegroundRest, neutralStrokeRest, } from \"../design-tokens.js\";\nimport { heightNumber } from \"../styles/index.js\";\n/**\n * Styles for Horizontal Slider label\n * @public\n */\nexport const horizontalSliderLabelStyles = css `\n    :host {\n        align-self: start;\n        grid-row: 2;\n        margin-top: -2px;\n        height: calc((${heightNumber} / 2 + ${designUnit}) * 1px);\n        width: auto;\n    }\n    .container {\n        grid-template-rows: auto auto;\n        grid-template-columns: 0;\n    }\n    .label {\n        margin: 2px 0;\n    }\n`;\n/**\n * Styles for Vertical slider label\n * @public\n */\nexport const verticalSliderLabelStyles = css `\n    :host {\n        justify-self: start;\n        grid-column: 2;\n        margin-left: 2px;\n        height: auto;\n        width: calc((${heightNumber} / 2 + ${designUnit}) * 1px);\n    }\n    .container {\n        grid-template-columns: auto auto;\n        grid-template-rows: 0;\n        min-width: calc(var(--thumb-size) * 1px);\n        height: calc(var(--thumb-size) * 1px);\n    }\n    .mark {\n        transform: rotate(90deg);\n        align-self: center;\n    }\n    .label {\n        margin-left: calc((${designUnit} / 2) * 3px);\n        align-self: center;\n    }\n`;\n/**\n * Styles for Slider Label\n * @public\n */\nexport const sliderLabelStyles = (context, definition) => css `\n        ${display(\"block\")} :host {\n            font-family: ${bodyFont};\n            color: ${neutralForegroundRest};\n            fill: currentcolor;\n        }\n        .root {\n            position: absolute;\n            display: grid;\n        }\n        .container {\n            display: grid;\n            justify-self: center;\n        }\n        .label {\n            justify-self: center;\n            align-self: center;\n            white-space: nowrap;\n            max-width: 30px;\n        }\n        .mark {\n            width: calc((${designUnit} / 4) * 1px);\n            height: calc(${heightNumber} * 0.25 * 1px);\n            background: ${neutralStrokeRest};\n            justify-self: center;\n        }\n        :host(.disabled) {\n            opacity: ${disabledOpacity};\n        }\n    `.withBehaviors(forcedColorsStylesheetBehavior(css `\n                .mark {\n                    forced-color-adjust: none;\n                    background: ${SystemColors.FieldText};\n                }\n                :host(.disabled) {\n                    forced-color-adjust: none;\n                    opacity: 1;\n                }\n                :host(.disabled) .label {\n                    color: ${SystemColors.GrayText};\n                }\n                :host(.disabled) .mark {\n                    background: ${SystemColors.GrayText};\n                }\n            `));\n","import { css } from \"@microsoft/fast-element\";\nimport { display } from \"@microsoft/fast-foundation\";\nimport { density, designUnit, typeRampBaseFontSize, typeRampBaseLineHeight, } from \"../design-tokens.js\";\n/**\n * Styles for Tab Panel\n * @public\n */\nexport const tabPanelStyles = (context, definition) => css `\n    ${display(\"block\")} :host {\n        box-sizing: border-box;\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n        padding: 0 calc((6 + (${designUnit} * 2 * ${density})) * 1px);\n    }\n`;\n","import { css } from \"@microsoft/fast-element\";\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { accentFillActive, accentFillHover, accentFillRest, bodyFont, controlCornerRadius, designUnit, disabledOpacity, focusStrokeOuter, neutralFillHover, neutralFillInputActive, neutralFillInputHover, neutralFillInputRest, neutralFillRest, neutralForegroundRest, neutralStrokeRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from \"../design-tokens.js\";\nimport { heightNumber } from \"../styles/index.js\";\n/**\n * Styles for Text Area\n * @public\n */\nexport const textAreaStyles = (context, definition) => css `\n    ${display(\"inline-block\")} :host {\n        font-family: ${bodyFont};\n        outline: none;\n        user-select: none;\n    }\n\n    .control {\n        box-sizing: border-box;\n        position: relative;\n        color: ${neutralForegroundRest};\n        background: ${neutralFillInputRest};\n        border-radius: calc(${controlCornerRadius} * 1px);\n        border: calc(${strokeWidth} * 1px) solid ${accentFillRest};\n        height: calc(${heightNumber} * 2px);\n        font: inherit;\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n        padding: calc(${designUnit} * 2px + 1px);\n        width: 100%;\n        resize: none;\n    }\n\n    .control:hover:enabled {\n        background: ${neutralFillInputHover};\n        border-color: ${accentFillHover};\n    }\n\n    .control:active:enabled {\n        background: ${neutralFillInputActive};\n        border-color: ${accentFillActive};\n    }\n\n    .control:hover,\n    .control:${focusVisible},\n    .control:disabled,\n    .control:active {\n        outline: none;\n    }\n\n    :host(:focus-within) .control {\n        border-color: ${focusStrokeOuter};\n        box-shadow: 0 0 0 1px ${focusStrokeOuter} inset;\n    }\n\n    :host([appearance=\"filled\"]) .control {\n        background: ${neutralFillRest};\n    }\n\n    :host([appearance=\"filled\"]:hover:not([disabled])) .control {\n        background: ${neutralFillHover};\n    }\n\n    :host([resize=\"both\"]) .control {\n        resize: both;\n    }\n\n    :host([resize=\"horizontal\"]) .control {\n        resize: horizontal;\n    }\n\n    :host([resize=\"vertical\"]) .control {\n        resize: vertical;\n    }\n\n    .label {\n        display: block;\n        color: ${neutralForegroundRest};\n        cursor: pointer;\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n        margin-bottom: 4px;\n    }\n\n    .label__hidden {\n        display: none;\n        visibility: hidden;\n    }\n\n    :host([disabled]) .label,\n    :host([readonly]) .label,\n    :host([readonly]) .control,\n    :host([disabled]) .control {\n        cursor: ${disabledCursor};\n    }\n    :host([disabled]) {\n        opacity: ${disabledOpacity};\n    }\n    :host([disabled]) .control {\n        border-color: ${neutralStrokeRest};\n    }\n\n    :host([cols]){\n        width: initial;\n    }\n\n    :host([rows]) .control {\n        height: initial;\n    }\n `.withBehaviors(forcedColorsStylesheetBehavior(css `\n                :host([disabled]) {\n                    opacity: 1;\n                }\n            `));\n","import { __decorate } from \"tslib\";\nimport { attr } from \"@microsoft/fast-element\";\nimport { TextArea as FoundationTextArea, textAreaTemplate as template, } from \"@microsoft/fast-foundation\";\nimport { textAreaStyles as styles } from \"./text-area.styles.js\";\n/**\n * @internal\n */\nexport class TextArea extends FoundationTextArea {\n    constructor() {\n        super(...arguments);\n        /**\n         * The appearance of the element.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: appearance\n         */\n        this.appearance = \"outline\";\n    }\n}\n__decorate([\n    attr\n], TextArea.prototype, \"appearance\", void 0);\n/**\n * A function that returns a {@link @microsoft/fast-foundation#TextArea} registration for configuring the component with a DesignSystem.\n * Implements {@link @microsoft/fast-foundation#textAreaTemplate}\n *\n *\n * @public\n * @remarks\n * Generates HTML Element: `<fast-text-area>`\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}\n */\nexport const fastTextArea = TextArea.compose({\n    baseName: \"text-area\",\n    baseClass: FoundationTextArea,\n    template,\n    styles,\n    shadowOptions: {\n        delegatesFocus: true,\n    },\n});\nexport { styles as textAreaStyles };\n","import { css } from \"@microsoft/fast-element\";\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { accentFillActive, accentFillHover, accentFillRest, bodyFont, controlCornerRadius, designUnit, disabledOpacity, focusStrokeOuter, focusStrokeWidth, neutralFillHover, neutralFillInputHover, neutralFillInputRest, neutralFillRest, neutralForegroundRest, neutralStrokeRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from \"../design-tokens.js\";\nimport { heightNumber } from \"../styles/index.js\";\n/**\n * Styles for Text Field\n * @public\n */\nexport const textFieldStyles = (context, definition) => css `\n    ${display(\"inline-block\")} :host {\n        font-family: ${bodyFont};\n        outline: none;\n        user-select: none;\n    }\n\n    .root {\n        box-sizing: border-box;\n        position: relative;\n        display: flex;\n        flex-direction: row;\n        color: ${neutralForegroundRest};\n        background: ${neutralFillInputRest};\n        border-radius: calc(${controlCornerRadius} * 1px);\n        border: calc(${strokeWidth} * 1px) solid ${accentFillRest};\n        height: calc(${heightNumber} * 1px);\n        align-items: baseline;\n    }\n\n    .control {\n        -webkit-appearance: none;\n        font: inherit;\n        background: transparent;\n        border: 0;\n        color: inherit;\n        height: calc(100% - 4px);\n        width: 100%;\n        margin-top: auto;\n        margin-bottom: auto;\n        border: none;\n        padding: 0 calc(${designUnit} * 2px + 1px);\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n    }\n\n    .control:hover,\n    .control:${focusVisible},\n    .control:disabled,\n    .control:active {\n        outline: none;\n    }\n\n    .label {\n        display: block;\n        color: ${neutralForegroundRest};\n        cursor: pointer;\n        font-size: ${typeRampBaseFontSize};\n        line-height: ${typeRampBaseLineHeight};\n        margin-bottom: 4px;\n    }\n\n    .label__hidden {\n        display: none;\n        visibility: hidden;\n    }\n\n    .start,\n    .control,\n    .end {\n        align-self: center;\n    }\n\n    .start,\n    .end {\n        display: flex;\n        margin: auto;\n        fill: currentcolor;\n    }\n\n    ::slotted(svg) {\n        /* TODO: adaptive typography https://github.com/microsoft/fast/issues/2432 */\n        width: 16px;\n        height: 16px;\n    }\n\n    .start {\n        margin-inline-start: 11px;\n    }\n\n    .end {\n        margin-inline-end: 11px;\n    }\n\n    :host(:hover:not([disabled])) .root {\n        background: ${neutralFillInputHover};\n        border-color: ${accentFillHover};\n    }\n\n    :host(:active:not([disabled])) .root {\n        background: ${neutralFillInputHover};\n        border-color: ${accentFillActive};\n    }\n\n    :host(:focus-within:not([disabled])) .root {\n        border-color: ${focusStrokeOuter};\n        box-shadow: 0 0 0 calc(${focusStrokeWidth} * 1px) ${focusStrokeOuter} inset;\n    }\n\n    :host([appearance=\"filled\"]) .root {\n        background: ${neutralFillRest};\n    }\n\n    :host([appearance=\"filled\"]:hover:not([disabled])) .root {\n        background: ${neutralFillHover};\n    }\n\n    :host([disabled]) .label,\n    :host([readonly]) .label,\n    :host([readonly]) .control,\n    :host([disabled]) .control {\n        cursor: ${disabledCursor};\n    }\n\n    :host([disabled]) {\n        opacity: ${disabledOpacity};\n    }\n\n    :host([disabled]) .control {\n        border-color: ${neutralStrokeRest};\n    }\n`.withBehaviors(forcedColorsStylesheetBehavior(css `\n                .root,\n                :host([appearance=\"filled\"]) .root {\n                    forced-color-adjust: none;\n                    background: ${SystemColors.Field};\n                    border-color: ${SystemColors.FieldText};\n                }\n                :host(:hover:not([disabled])) .root,\n                :host([appearance=\"filled\"]:hover:not([disabled])) .root,\n                :host([appearance=\"filled\"]:hover) .root {\n                    background: ${SystemColors.Field};\n                    border-color: ${SystemColors.Highlight};\n                }\n                .start,\n                .end {\n                    fill: currentcolor;\n                }\n                :host([disabled]) {\n                    opacity: 1;\n                }\n                :host([disabled]) .root,\n                :host([appearance=\"filled\"]:hover[disabled]) .root {\n                    border-color: ${SystemColors.GrayText};\n                    background: ${SystemColors.Field};\n                }\n                :host(:focus-within:enabled) .root {\n                    border-color: ${SystemColors.Highlight};\n                    box-shadow: 0 0 0 1px ${SystemColors.Highlight} inset;\n                }\n                input::placeholder {\n                    color: ${SystemColors.GrayText};\n                }\n            `));\n","import { __decorate } from \"tslib\";\nimport { attr } from \"@microsoft/fast-element\";\nimport { TextField as FoundationTextField, textFieldTemplate as template, } from \"@microsoft/fast-foundation\";\nimport { textFieldStyles as styles } from \"./text-field.styles.js\";\n/**\n * @internal\n */\nexport class TextField extends FoundationTextField {\n    constructor() {\n        super(...arguments);\n        /**\n         * The appearance of the element.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: appearance\n         */\n        this.appearance = \"outline\";\n    }\n}\n__decorate([\n    attr\n], TextField.prototype, \"appearance\", void 0);\n/**\n * A function that returns a {@link @microsoft/fast-foundation#TextField} registration for configuring the component with a DesignSystem.\n * Implements {@link @microsoft/fast-foundation#textFieldTemplate}\n *\n *\n * @public\n * @remarks\n * Generates HTML Element: `<fast-text-field>`\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}\n */\nexport const fastTextField = TextField.compose({\n    baseName: \"text-field\",\n    baseClass: FoundationTextField,\n    template,\n    styles,\n    shadowOptions: {\n        delegatesFocus: true,\n    },\n});\nexport { styles as textFieldStyles };\n","import { css } from \"@microsoft/fast-element\";\nimport { display, focusVisible, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { SystemColors } from \"@microsoft/fast-web-utilities\";\nimport { controlCornerRadius, fillColor, focusStrokeWidth, neutralStrokeFocus, strokeWidth, } from \"../design-tokens.js\";\n/**\n * Styles for the Toolbar\n *\n * @public\n */\nexport const toolbarStyles = (context, definition) => css `\n        ${display(\"inline-flex\")} :host {\n            --toolbar-item-gap: calc(\n                (var(--design-unit) + calc(var(--density) + 2)) * 1px\n            );\n            background-color: ${fillColor};\n            border-radius: calc(${controlCornerRadius} * 1px);\n            fill: currentcolor;\n            padding: var(--toolbar-item-gap);\n        }\n\n        :host(${focusVisible}) {\n            outline: calc(${strokeWidth} * 1px) solid ${neutralStrokeFocus};\n        }\n\n        .positioning-region {\n            align-items: flex-start;\n            display: inline-flex;\n            flex-flow: row wrap;\n            justify-content: flex-start;\n        }\n\n        :host([orientation=\"vertical\"]) .positioning-region {\n            flex-direction: column;\n        }\n\n        ::slotted(:not([slot])) {\n            flex: 0 0 auto;\n            margin: 0 var(--toolbar-item-gap);\n        }\n\n        :host([orientation=\"vertical\"]) ::slotted(:not([slot])) {\n            margin: var(--toolbar-item-gap) 0;\n        }\n\n        .start,\n        .end {\n            display: flex;\n            margin: auto;\n            margin-inline: 0;\n        }\n\n        ::slotted(svg) {\n            /* TODO: adaptive typography https://github.com/microsoft/fast/issues/2432 */\n            width: 16px;\n            height: 16px;\n        }\n    `.withBehaviors(forcedColorsStylesheetBehavior(css `\n            :host(:${focusVisible}) {\n                box-shadow: 0 0 0 calc(${focusStrokeWidth} * 1px) ${SystemColors.Highlight};\n                color: ${SystemColors.ButtonText};\n                forced-color-adjust: none;\n            }\n        `));\n","import { composedParent, Toolbar as FoundationToolbar, toolbarTemplate as template, } from \"@microsoft/fast-foundation\";\nimport { fillColor, neutralFillLayerRecipe } from \"../design-tokens.js\";\nimport { toolbarStyles as styles } from \"./toolbar.styles.js\";\n/**\n * @internal\n */\nexport class Toolbar extends FoundationToolbar {\n    connectedCallback() {\n        super.connectedCallback();\n        const parent = composedParent(this);\n        if (parent) {\n            fillColor.setValueFor(this, (target) => neutralFillLayerRecipe\n                .getValueFor(target)\n                .evaluate(target, fillColor.getValueFor(parent)));\n        }\n    }\n}\n/**\n * A function that returns a {@link @microsoft/fast-foundation#Toolbar} registration for configuring the component with a DesignSystem.\n * Implements {@link @microsoft/fast-foundation#toolbarTemplate}\n *\n * @public\n * @remarks\n *\n * Generates HTML Element: `<fast-toolbar>`\n *\n */\nexport const fastToolbar = Toolbar.compose({\n    baseName: \"toolbar\",\n    baseClass: FoundationToolbar,\n    template,\n    styles,\n    shadowOptions: {\n        delegatesFocus: true,\n    },\n});\nexport { styles as toolbarStyles };\n","import { css } from \"@microsoft/fast-element\";\nimport { AnchoredRegion, forcedColorsStylesheetBehavior, } from \"@microsoft/fast-foundation\";\nimport { bodyFont, controlCornerRadius, focusStrokeOuter, neutralFillRest, neutralForegroundRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from \"../design-tokens.js\";\n/**\n * Styles for Tooltip\n * @public\n */\nexport const tooltipStyles = (context, definition) => {\n    const anchoredRegionTag = context.tagFor(AnchoredRegion);\n    return css `\n            :host {\n                contain: size;\n                overflow: visible;\n                height: 0;\n                width: 0;\n            }\n\n            .tooltip {\n                box-sizing: border-box;\n                border-radius: calc(${controlCornerRadius} * 1px);\n                border: calc(${strokeWidth} * 1px) solid ${focusStrokeOuter};\n                box-shadow: 0 0 0 1px ${focusStrokeOuter} inset;\n                background: ${neutralFillRest};\n                color: ${neutralForegroundRest};\n                padding: 4px;\n                height: fit-content;\n                width: fit-content;\n                font-family: ${bodyFont};\n                font-size: ${typeRampBaseFontSize};\n                line-height: ${typeRampBaseLineHeight};\n                white-space: nowrap;\n                /* TODO: a mechanism to manage z-index across components\n                    https://github.com/microsoft/fast/issues/3813 */\n                z-index: 10000;\n            }\n\n            ${anchoredRegionTag} {\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                overflow: visible;\n                flex-direction: row;\n            }\n\n            ${anchoredRegionTag}.right,\n            ${anchoredRegionTag}.left {\n                flex-direction: column;\n            }\n\n            ${anchoredRegionTag}.top .tooltip {\n                margin-bottom: 4px;\n            }\n\n            ${anchoredRegionTag}.bottom .tooltip {\n                margin-top: 4px;\n            }\n\n            ${anchoredRegionTag}.left .tooltip {\n                margin-right: 4px;\n            }\n\n            ${anchoredRegionTag}.right .tooltip {\n                margin-left: 4px;\n            }\n\n            ${anchoredRegionTag}.top.left .tooltip,\n            ${anchoredRegionTag}.top.right .tooltip {\n                margin-bottom: 0px;\n            }\n\n            ${anchoredRegionTag}.bottom.left .tooltip,\n            ${anchoredRegionTag}.bottom.right .tooltip {\n                margin-top: 0px;\n            }\n\n            ${anchoredRegionTag}.top.left .tooltip,\n            ${anchoredRegionTag}.bottom.left .tooltip {\n                margin-right: 0px;\n            }\n\n            ${anchoredRegionTag}.top.right .tooltip,\n            ${anchoredRegionTag}.bottom.right .tooltip {\n                margin-left: 0px;\n            }\n\n        `.withBehaviors(forcedColorsStylesheetBehavior(css `\n                :host([disabled]) {\n                    opacity: 1;\n                }\n            `));\n};\n","import { css } from \"@microsoft/fast-element\";\nimport { display } from \"@microsoft/fast-foundation\";\n/**\n * Styles for Tree View\n * @public\n */\nexport const treeViewStyles = (context, definition) => css `\n    ${display(\"flex\")} :host {\n        flex-direction: column;\n        align-items: stretch;\n        min-width: fit-content;\n        font-size: 0;\n    }\n\n    :host:focus-visible {\n        outline: none;\n    }\n`;\n","import { html, ref } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(AccordionItem:class)} component.\n * @public\n */\nexport const accordionItemTemplate = (context, definition) => html `\n    <template class=\"${x => (x.expanded ? \"expanded\" : \"\")}\">\n        <div\n            class=\"heading\"\n            part=\"heading\"\n            role=\"heading\"\n            aria-level=\"${x => x.headinglevel}\"\n        >\n            <button\n                class=\"button\"\n                part=\"button\"\n                ${ref(\"expandbutton\")}\n                aria-expanded=\"${x => x.expanded}\"\n                aria-controls=\"${x => x.id}-panel\"\n                id=\"${x => x.id}\"\n                @click=\"${(x, c) => x.clickHandler(c.event)}\"\n            >\n                <span class=\"heading-content\" part=\"heading-content\">\n                    <slot name=\"heading\"></slot>\n                </span>\n            </button>\n            ${startSlotTemplate(context, definition)}\n            ${endSlotTemplate(context, definition)}\n            <span class=\"icon\" part=\"icon\" aria-hidden=\"true\">\n                <slot name=\"expanded-icon\" part=\"expanded-icon\">\n                    ${definition.expandedIcon || \"\"}\n                </slot>\n                <slot name=\"collapsed-icon\" part=\"collapsed-icon\">\n                    ${definition.collapsedIcon || \"\"}\n                </slot>\n            <span>\n        </div>\n        <div\n            class=\"region\"\n            part=\"region\"\n            id=\"${x => x.id}-panel\"\n            role=\"region\"\n            aria-labelledby=\"${x => x.id}\"\n        >\n            <slot></slot>\n        </div>\n    </template>\n`;\n","import { elements, html, slotted } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#Accordion} component.\n * @public\n */\nexport const accordionTemplate = (context, definition) => /* TODO: deprecate slot name `item` to only support default slot https://github.com/microsoft/fast/issues/5515 */ html `\n    <template>\n        <slot ${slotted({ property: \"accordionItems\", filter: elements() })}></slot>\n        <slot name=\"item\" part=\"item\" ${slotted(\"accordionItems\")}></slot>\n    </template>\n`;\n","import { html, when } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(AnchoredRegion:class)} component.\n * @public\n */\nexport const anchoredRegionTemplate = (context, definition) => html `\n    <template class=\"${x => (x.initialLayoutComplete ? \"loaded\" : \"\")}\">\n        ${when(x => x.initialLayoutComplete, html `\n                <slot></slot>\n            `)}\n    </template>\n`;\n","import { html } from \"@microsoft/fast-element\";\n/**\n * The template for {@link @microsoft/fast-foundation#Avatar} component.\n * @public\n */\nexport const avatarTemplate = (context, definition) => html `\n    <div\n        class=\"backplate ${x => x.shape}\"\n        part=\"backplate\"\n        style=\"${x => x.fill ? `background-color: var(--avatar-fill-${x.fill});` : void 0}\"\n    >\n        <a\n            class=\"link\"\n            part=\"link\"\n            href=\"${x => (x.link ? x.link : void 0)}\"\n            style=\"${x => (x.color ? `color: var(--avatar-color-${x.color});` : void 0)}\"\n        >\n            <slot name=\"media\" part=\"media\">${definition.media || \"\"}</slot>\n            <slot class=\"content\" part=\"content\"><slot>\n        </a>\n    </div>\n    <slot name=\"badge\" part=\"badge\"></slot>\n`;\n","import { html } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#Badge} component.\n * @public\n */\nexport const badgeTemplate = (context, definition) => html `\n    <template class=\"${x => (x.circular ? \"circular\" : \"\")}\">\n        <div class=\"control\" part=\"control\" style=\"${x => x.generateBadgeStyle()}\">\n            <slot></slot>\n        </div>\n    </template>\n`;\n","import { html, when } from \"@microsoft/fast-element\";\nimport { anchorTemplate } from \"../anchor/anchor.template.js\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(BreadcrumbItem:class)} component.\n * @public\n */\nexport const breadcrumbItemTemplate = (context, definition) => html `\n    <div role=\"listitem\" class=\"listitem\" part=\"listitem\">\n        ${when(x => x.href && x.href.length > 0, html `\n                ${anchorTemplate(context, definition)}\n            `)}\n        ${when(x => !x.href, html `\n                ${startSlotTemplate(context, definition)}\n                <slot></slot>\n                ${endSlotTemplate(context, definition)}\n            `)}\n        ${when(x => x.separator, html `\n                <span class=\"separator\" part=\"separator\" aria-hidden=\"true\">\n                    <slot name=\"separator\">${definition.separator || \"\"}</slot>\n                </span>\n            `)}\n    </div>\n`;\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Anchor:class)} component.\n * @public\n */\nexport const anchorTemplate = (context, definition) => html `\n    <a\n        class=\"control\"\n        part=\"control\"\n        download=\"${x => x.download}\"\n        href=\"${x => x.href}\"\n        hreflang=\"${x => x.hreflang}\"\n        ping=\"${x => x.ping}\"\n        referrerpolicy=\"${x => x.referrerpolicy}\"\n        rel=\"${x => x.rel}\"\n        target=\"${x => x.target}\"\n        type=\"${x => x.type}\"\n        aria-atomic=\"${x => x.ariaAtomic}\"\n        aria-busy=\"${x => x.ariaBusy}\"\n        aria-controls=\"${x => x.ariaControls}\"\n        aria-current=\"${x => x.ariaCurrent}\"\n        aria-describedby=\"${x => x.ariaDescribedby}\"\n        aria-details=\"${x => x.ariaDetails}\"\n        aria-disabled=\"${x => x.ariaDisabled}\"\n        aria-errormessage=\"${x => x.ariaErrormessage}\"\n        aria-expanded=\"${x => x.ariaExpanded}\"\n        aria-flowto=\"${x => x.ariaFlowto}\"\n        aria-haspopup=\"${x => x.ariaHaspopup}\"\n        aria-hidden=\"${x => x.ariaHidden}\"\n        aria-invalid=\"${x => x.ariaInvalid}\"\n        aria-keyshortcuts=\"${x => x.ariaKeyshortcuts}\"\n        aria-label=\"${x => x.ariaLabel}\"\n        aria-labelledby=\"${x => x.ariaLabelledby}\"\n        aria-live=\"${x => x.ariaLive}\"\n        aria-owns=\"${x => x.ariaOwns}\"\n        aria-relevant=\"${x => x.ariaRelevant}\"\n        aria-roledescription=\"${x => x.ariaRoledescription}\"\n        ${ref(\"control\")}\n    >\n        ${startSlotTemplate(context, definition)}\n        <span class=\"content\" part=\"content\">\n            <slot ${slotted(\"defaultSlottedContent\")}></slot>\n        </span>\n        ${endSlotTemplate(context, definition)}\n    </a>\n`;\n","import { elements, html, slotted } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#Breadcrumb} component.\n * @public\n */\nexport const breadcrumbTemplate = (context, definition) => html `\n    <template role=\"navigation\">\n        <div role=\"list\" class=\"list\" part=\"list\">\n            <slot\n                ${slotted({ property: \"slottedBreadcrumbItems\", filter: elements() })}\n            ></slot>\n        </div>\n    </template>\n`;\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Button:class)} component.\n * @public\n */\nexport const buttonTemplate = (context, definition) => html `\n    <button\n        class=\"control\"\n        part=\"control\"\n        ?autofocus=\"${x => x.autofocus}\"\n        ?disabled=\"${x => x.disabled}\"\n        form=\"${x => x.formId}\"\n        formaction=\"${x => x.formaction}\"\n        formenctype=\"${x => x.formenctype}\"\n        formmethod=\"${x => x.formmethod}\"\n        formnovalidate=\"${x => x.formnovalidate}\"\n        formtarget=\"${x => x.formtarget}\"\n        name=\"${x => x.name}\"\n        type=\"${x => x.type}\"\n        value=\"${x => x.value}\"\n        aria-atomic=\"${x => x.ariaAtomic}\"\n        aria-busy=\"${x => x.ariaBusy}\"\n        aria-controls=\"${x => x.ariaControls}\"\n        aria-current=\"${x => x.ariaCurrent}\"\n        aria-describedby=\"${x => x.ariaDescribedby}\"\n        aria-details=\"${x => x.ariaDetails}\"\n        aria-disabled=\"${x => x.ariaDisabled}\"\n        aria-errormessage=\"${x => x.ariaErrormessage}\"\n        aria-expanded=\"${x => x.ariaExpanded}\"\n        aria-flowto=\"${x => x.ariaFlowto}\"\n        aria-haspopup=\"${x => x.ariaHaspopup}\"\n        aria-hidden=\"${x => x.ariaHidden}\"\n        aria-invalid=\"${x => x.ariaInvalid}\"\n        aria-keyshortcuts=\"${x => x.ariaKeyshortcuts}\"\n        aria-label=\"${x => x.ariaLabel}\"\n        aria-labelledby=\"${x => x.ariaLabelledby}\"\n        aria-live=\"${x => x.ariaLive}\"\n        aria-owns=\"${x => x.ariaOwns}\"\n        aria-pressed=\"${x => x.ariaPressed}\"\n        aria-relevant=\"${x => x.ariaRelevant}\"\n        aria-roledescription=\"${x => x.ariaRoledescription}\"\n        ${ref(\"control\")}\n    >\n        ${startSlotTemplate(context, definition)}\n        <span class=\"content\" part=\"content\">\n            <slot ${slotted(\"defaultSlottedContent\")}></slot>\n        </span>\n        ${endSlotTemplate(context, definition)}\n    </button>\n`;\n","import { html, slotted } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Checkbox:class)} component.\n * @public\n */\nexport const checkboxTemplate = (context, definition) => html `\n    <template\n        role=\"checkbox\"\n        aria-checked=\"${x => x.checked}\"\n        aria-required=\"${x => x.required}\"\n        aria-disabled=\"${x => x.disabled}\"\n        aria-readonly=\"${x => x.readOnly}\"\n        tabindex=\"${x => (x.disabled ? null : 0)}\"\n        @keypress=\"${(x, c) => x.keypressHandler(c.event)}\"\n        @click=\"${(x, c) => x.clickHandler(c.event)}\"\n        class=\"${x => (x.readOnly ? \"readonly\" : \"\")} ${x => x.checked ? \"checked\" : \"\"} ${x => (x.indeterminate ? \"indeterminate\" : \"\")}\"\n    >\n        <div part=\"control\" class=\"control\">\n            <slot name=\"checked-indicator\">\n                ${definition.checkedIndicator || \"\"}\n            </slot>\n            <slot name=\"indeterminate-indicator\">\n                ${definition.indeterminateIndicator || \"\"}\n            </slot>\n        </div>\n        <label\n            part=\"label\"\n            class=\"${x => x.defaultSlottedNodes && x.defaultSlottedNodes.length\n    ? \"label\"\n    : \"label label__hidden\"}\"\n        >\n            <slot ${slotted(\"defaultSlottedNodes\")}></slot>\n        </label>\n    </template>\n`;\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\nimport { Listbox } from \"../listbox/listbox.js\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Combobox:class)} component.\n * @public\n */\nexport const comboboxTemplate = (context, definition) => html `\n    <template\n        aria-disabled=\"${x => x.ariaDisabled}\"\n        autocomplete=\"${x => x.autocomplete}\"\n        class=\"${x => (x.open ? \"open\" : \"\")} ${x => x.disabled ? \"disabled\" : \"\"} ${x => x.position}\"\n        ?open=\"${x => x.open}\"\n        tabindex=\"${x => (!x.disabled ? \"0\" : null)}\"\n        @click=\"${(x, c) => x.clickHandler(c.event)}\"\n        @focusout=\"${(x, c) => x.focusoutHandler(c.event)}\"\n        @keydown=\"${(x, c) => x.keydownHandler(c.event)}\"\n    >\n        <div class=\"control\" part=\"control\">\n            ${startSlotTemplate(context, definition)}\n            <slot name=\"control\">\n                <input\n                    aria-activedescendant=\"${x => x.open ? x.ariaActiveDescendant : null}\"\n                    aria-autocomplete=\"${x => x.ariaAutoComplete}\"\n                    aria-controls=\"${x => x.ariaControls}\"\n                    aria-disabled=\"${x => x.ariaDisabled}\"\n                    aria-expanded=\"${x => x.ariaExpanded}\"\n                    aria-haspopup=\"listbox\"\n                    class=\"selected-value\"\n                    part=\"selected-value\"\n                    placeholder=\"${x => x.placeholder}\"\n                    role=\"combobox\"\n                    type=\"text\"\n                    ?disabled=\"${x => x.disabled}\"\n                    :value=\"${x => x.value}\"\n                    @input=\"${(x, c) => x.inputHandler(c.event)}\"\n                    @keyup=\"${(x, c) => x.keyupHandler(c.event)}\"\n                    ${ref(\"control\")}\n                />\n                <div class=\"indicator\" part=\"indicator\" aria-hidden=\"true\">\n                    <slot name=\"indicator\">\n                        ${definition.indicator || \"\"}\n                    </slot>\n                </div>\n            </slot>\n            ${endSlotTemplate(context, definition)}\n        </div>\n        <div\n            class=\"listbox\"\n            id=\"${x => x.listboxId}\"\n            part=\"listbox\"\n            role=\"listbox\"\n            ?disabled=\"${x => x.disabled}\"\n            ?hidden=\"${x => !x.open}\"\n            ${ref(\"listbox\")}\n        >\n            <slot\n                ${slotted({\n    filter: Listbox.slottedOptionFilter,\n    flatten: true,\n    property: \"slottedOptions\",\n})}\n            ></slot>\n        </div>\n    </template>\n`;\n","import { __decorate } from \"tslib\";\nimport { attr, html, observable } from \"@microsoft/fast-element\";\nimport { eventFocusIn, eventFocusOut, eventKeyDown, keyEnter, keyEscape, keyFunction2, } from \"@microsoft/fast-web-utilities\";\nimport { FoundationElement } from \"../foundation-element/foundation-element.js\";\nimport { DataGridCellTypes } from \"./data-grid.options.js\";\nexport { DataGridCellTypes };\nconst defaultCellContentsTemplate = html `\n    <template>\n        ${x => x.rowData === null ||\n    x.columnDefinition === null ||\n    x.columnDefinition.columnDataKey === null\n    ? null\n    : x.rowData[x.columnDefinition.columnDataKey]}\n    </template>\n`;\nconst defaultHeaderCellContentsTemplate = html `\n    <template>\n        ${x => x.columnDefinition === null\n    ? null\n    : x.columnDefinition.title === undefined\n        ? x.columnDefinition.columnDataKey\n        : x.columnDefinition.title}\n    </template>\n`;\n/**\n * A Data Grid Cell Custom HTML Element.\n *\n * @fires cell-focused - Fires a custom 'cell-focused' event when focus is on the cell or its contents\n * @slot - The default slot for cell contents.  The \"cell contents template\" renders here.\n * @public\n */\nexport class DataGridCell extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The type of cell\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: cell-type\n         */\n        this.cellType = DataGridCellTypes.default;\n        /**\n         * The base data for the parent row\n         *\n         * @public\n         */\n        this.rowData = null;\n        /**\n         * The base data for the column\n         *\n         * @public\n         */\n        this.columnDefinition = null;\n        this.isActiveCell = false;\n        this.customCellView = null;\n        this.updateCellStyle = () => {\n            this.style.gridColumn = this.gridColumn;\n        };\n    }\n    cellTypeChanged() {\n        if (this.$fastController.isConnected) {\n            this.updateCellView();\n        }\n    }\n    gridColumnChanged() {\n        if (this.$fastController.isConnected) {\n            this.updateCellStyle();\n        }\n    }\n    columnDefinitionChanged(oldValue, newValue) {\n        if (this.$fastController.isConnected) {\n            this.updateCellView();\n        }\n    }\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        var _a;\n        super.connectedCallback();\n        this.addEventListener(eventFocusIn, this.handleFocusin);\n        this.addEventListener(eventFocusOut, this.handleFocusout);\n        this.addEventListener(eventKeyDown, this.handleKeydown);\n        this.style.gridColumn = `${((_a = this.columnDefinition) === null || _a === void 0 ? void 0 : _a.gridColumn) === undefined\n            ? 0\n            : this.columnDefinition.gridColumn}`;\n        this.updateCellView();\n        this.updateCellStyle();\n    }\n    /**\n     * @internal\n     */\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.removeEventListener(eventFocusIn, this.handleFocusin);\n        this.removeEventListener(eventFocusOut, this.handleFocusout);\n        this.removeEventListener(eventKeyDown, this.handleKeydown);\n        this.disconnectCellView();\n    }\n    handleFocusin(e) {\n        if (this.isActiveCell) {\n            return;\n        }\n        this.isActiveCell = true;\n        switch (this.cellType) {\n            case DataGridCellTypes.columnHeader:\n                if (this.columnDefinition !== null &&\n                    this.columnDefinition.headerCellInternalFocusQueue !== true &&\n                    typeof this.columnDefinition.headerCellFocusTargetCallback ===\n                        \"function\") {\n                    // move focus to the focus target\n                    const focusTarget = this.columnDefinition.headerCellFocusTargetCallback(this);\n                    if (focusTarget !== null) {\n                        focusTarget.focus();\n                    }\n                }\n                break;\n            default:\n                if (this.columnDefinition !== null &&\n                    this.columnDefinition.cellInternalFocusQueue !== true &&\n                    typeof this.columnDefinition.cellFocusTargetCallback === \"function\") {\n                    // move focus to the focus target\n                    const focusTarget = this.columnDefinition.cellFocusTargetCallback(this);\n                    if (focusTarget !== null) {\n                        focusTarget.focus();\n                    }\n                }\n                break;\n        }\n        this.$emit(\"cell-focused\", this);\n    }\n    handleFocusout(e) {\n        if (this !== document.activeElement && !this.contains(document.activeElement)) {\n            this.isActiveCell = false;\n        }\n    }\n    handleKeydown(e) {\n        if (e.defaultPrevented ||\n            this.columnDefinition === null ||\n            (this.cellType === DataGridCellTypes.default &&\n                this.columnDefinition.cellInternalFocusQueue !== true) ||\n            (this.cellType === DataGridCellTypes.columnHeader &&\n                this.columnDefinition.headerCellInternalFocusQueue !== true)) {\n            return;\n        }\n        switch (e.key) {\n            case keyEnter:\n            case keyFunction2:\n                if (this.contains(document.activeElement) &&\n                    document.activeElement !== this) {\n                    return;\n                }\n                switch (this.cellType) {\n                    case DataGridCellTypes.columnHeader:\n                        if (this.columnDefinition.headerCellFocusTargetCallback !==\n                            undefined) {\n                            const focusTarget = this.columnDefinition.headerCellFocusTargetCallback(this);\n                            if (focusTarget !== null) {\n                                focusTarget.focus();\n                            }\n                            e.preventDefault();\n                        }\n                        break;\n                    default:\n                        if (this.columnDefinition.cellFocusTargetCallback !== undefined) {\n                            const focusTarget = this.columnDefinition.cellFocusTargetCallback(this);\n                            if (focusTarget !== null) {\n                                focusTarget.focus();\n                            }\n                            e.preventDefault();\n                        }\n                        break;\n                }\n                break;\n            case keyEscape:\n                if (this.contains(document.activeElement) &&\n                    document.activeElement !== this) {\n                    this.focus();\n                    e.preventDefault();\n                }\n                break;\n        }\n    }\n    updateCellView() {\n        this.disconnectCellView();\n        if (this.columnDefinition === null) {\n            return;\n        }\n        switch (this.cellType) {\n            case DataGridCellTypes.columnHeader:\n                if (this.columnDefinition.headerCellTemplate !== undefined) {\n                    this.customCellView = this.columnDefinition.headerCellTemplate.render(this, this);\n                }\n                else {\n                    this.customCellView = defaultHeaderCellContentsTemplate.render(this, this);\n                }\n                break;\n            case undefined:\n            case DataGridCellTypes.rowHeader:\n            case DataGridCellTypes.default:\n                if (this.columnDefinition.cellTemplate !== undefined) {\n                    this.customCellView = this.columnDefinition.cellTemplate.render(this, this);\n                }\n                else {\n                    this.customCellView = defaultCellContentsTemplate.render(this, this);\n                }\n                break;\n        }\n    }\n    disconnectCellView() {\n        if (this.customCellView !== null) {\n            this.customCellView.dispose();\n            this.customCellView = null;\n        }\n    }\n}\n__decorate([\n    attr({ attribute: \"cell-type\" })\n], DataGridCell.prototype, \"cellType\", void 0);\n__decorate([\n    attr({ attribute: \"grid-column\" })\n], DataGridCell.prototype, \"gridColumn\", void 0);\n__decorate([\n    observable\n], DataGridCell.prototype, \"rowData\", void 0);\n__decorate([\n    observable\n], DataGridCell.prototype, \"columnDefinition\", void 0);\n","import { html } from \"@microsoft/fast-element\";\n/**\n * Generates a template for the {@link @microsoft/fast-foundation#DataGridCell} component using\n * the provided prefix.\n * @public\n */\nexport const dataGridCellTemplate = (context, definition) => {\n    return html `\n        <template\n            tabindex=\"-1\"\n            role=\"${x => !x.cellType || x.cellType === \"default\" ? \"gridcell\" : x.cellType}\"\n            class=\"\n            ${x => x.cellType === \"columnheader\"\n        ? \"column-header\"\n        : x.cellType === \"rowheader\"\n            ? \"row-header\"\n            : \"\"}\n            \"\n        >\n            <slot></slot>\n        </template>\n    `;\n};\n","import { children, elements, html, slotted } from \"@microsoft/fast-element\";\nimport { DataGridCell } from \"./data-grid-cell.js\";\nfunction createCellItemTemplate(context) {\n    const cellTag = context.tagFor(DataGridCell);\n    return html `\n    <${cellTag}\n        cell-type=\"${x => (x.isRowHeader ? \"rowheader\" : undefined)}\"\n        grid-column=\"${(x, c) => c.index + 1}\"\n        :rowData=\"${(x, c) => c.parent.rowData}\"\n        :columnDefinition=\"${x => x}\"\n    ></${cellTag}>\n`;\n}\nfunction createHeaderCellItemTemplate(context) {\n    const cellTag = context.tagFor(DataGridCell);\n    return html `\n    <${cellTag}\n        cell-type=\"columnheader\"\n        grid-column=\"${(x, c) => c.index + 1}\"\n        :columnDefinition=\"${x => x}\"\n    ></${cellTag}>\n`;\n}\n/**\n * Generates a template for the {@link @microsoft/fast-foundation#DataGridRow} component using\n * the provided prefix.\n *\n * @public\n */\nexport const dataGridRowTemplate = (context, definition) => {\n    const cellItemTemplate = createCellItemTemplate(context);\n    const headerCellItemTemplate = createHeaderCellItemTemplate(context);\n    return html `\n        <template\n            role=\"row\"\n            class=\"${x => (x.rowType !== \"default\" ? x.rowType : \"\")}\"\n            :defaultCellItemTemplate=\"${cellItemTemplate}\"\n            :defaultHeaderCellItemTemplate=\"${headerCellItemTemplate}\"\n            ${children({\n        property: \"cellElements\",\n        filter: elements('[role=\"cell\"],[role=\"gridcell\"],[role=\"columnheader\"],[role=\"rowheader\"]'),\n    })}\n        >\n            <slot ${slotted(\"slottedCellElements\")}></slot>\n        </template>\n    `;\n};\n","import { children, elements, html } from \"@microsoft/fast-element\";\nimport { DataGridRow } from \"./data-grid-row.js\";\nfunction createRowItemTemplate(context) {\n    const rowTag = context.tagFor(DataGridRow);\n    return html `\n    <${rowTag}\n        :rowData=\"${x => x}\"\n        :cellItemTemplate=\"${(x, c) => c.parent.cellItemTemplate}\"\n        :headerCellItemTemplate=\"${(x, c) => c.parent.headerCellItemTemplate}\"\n    ></${rowTag}>\n`;\n}\n/**\n * Generates a template for the {@link @microsoft/fast-foundation#DataGrid} component using\n * the provided prefix.\n *\n * @public\n */\nexport const dataGridTemplate = (context, definition) => {\n    const rowItemTemplate = createRowItemTemplate(context);\n    const rowTag = context.tagFor(DataGridRow);\n    return html `\n        <template\n            role=\"grid\"\n            tabindex=\"0\"\n            :rowElementTag=\"${() => rowTag}\"\n            :defaultRowItemTemplate=\"${rowItemTemplate}\"\n            ${children({\n        property: \"rowElements\",\n        filter: elements(\"[role=row]\"),\n    })}\n        >\n            <slot></slot>\n        </template>\n    `;\n};\n","import { html } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#Divider} component.\n * @public\n */\nexport const dividerTemplate = (context, definition) => html `\n    <template role=\"${x => x.role}\" aria-orientation=\"${x => x.orientation}\"></template>\n`;\n","import { html, slotted } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(ListboxOption:class)} component.\n * @public\n */\nexport const listboxOptionTemplate = (context, definition) => html `\n    <template\n        aria-checked=\"${x => x.ariaChecked}\"\n        aria-disabled=\"${x => x.ariaDisabled}\"\n        aria-posinset=\"${x => x.ariaPosInSet}\"\n        aria-selected=\"${x => x.ariaSelected}\"\n        aria-setsize=\"${x => x.ariaSetSize}\"\n        class=\"${x => [x.checked && \"checked\", x.selected && \"selected\", x.disabled && \"disabled\"]\n    .filter(Boolean)\n    .join(\" \")}\"\n        role=\"option\"\n    >\n        ${startSlotTemplate(context, definition)}\n        <span class=\"content\" part=\"content\">\n            <slot ${slotted(\"content\")}></slot>\n        </span>\n        ${endSlotTemplate(context, definition)}\n    </template>\n`;\n","import { html, ref, when } from \"@microsoft/fast-element\";\nimport { AnchoredRegion } from \"../anchored-region/anchored-region.js\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\nimport { MenuItemRole } from \"./menu-item.js\";\n/**\n * Generates a template for the {@link @microsoft/fast-foundation#(MenuItem:class)} component using\n * the provided prefix.\n *\n * @public\n */\nexport const menuItemTemplate = (context, definition) => html `\n    <template\n        role=\"${x => x.role}\"\n        aria-haspopup=\"${x => (x.hasSubmenu ? \"menu\" : void 0)}\"\n        aria-checked=\"${x => (x.role !== MenuItemRole.menuitem ? x.checked : void 0)}\"\n        aria-disabled=\"${x => x.disabled}\"\n        aria-expanded=\"${x => x.expanded}\"\n        @keydown=\"${(x, c) => x.handleMenuItemKeyDown(c.event)}\"\n        @click=\"${(x, c) => x.handleMenuItemClick(c.event)}\"\n        @mouseover=\"${(x, c) => x.handleMouseOver(c.event)}\"\n        @mouseout=\"${(x, c) => x.handleMouseOut(c.event)}\"\n        class=\"${x => (x.disabled ? \"disabled\" : \"\")} ${x => x.expanded ? \"expanded\" : \"\"} ${x => `indent-${x.startColumnCount}`}\"\n    >\n            ${when(x => x.role === MenuItemRole.menuitemcheckbox, html `\n                    <div part=\"input-container\" class=\"input-container\">\n                        <span part=\"checkbox\" class=\"checkbox\">\n                            <slot name=\"checkbox-indicator\">\n                                ${definition.checkboxIndicator || \"\"}\n                            </slot>\n                        </span>\n                    </div>\n                `)}\n            ${when(x => x.role === MenuItemRole.menuitemradio, html `\n                    <div part=\"input-container\" class=\"input-container\">\n                        <span part=\"radio\" class=\"radio\">\n                            <slot name=\"radio-indicator\">\n                                ${definition.radioIndicator || \"\"}\n                            </slot>\n                        </span>\n                    </div>\n                `)}\n        </div>\n        ${startSlotTemplate(context, definition)}\n        <span class=\"content\" part=\"content\">\n            <slot></slot>\n        </span>\n        ${endSlotTemplate(context, definition)}\n        ${when(x => x.hasSubmenu, html `\n                <div\n                    part=\"expand-collapse-glyph-container\"\n                    class=\"expand-collapse-glyph-container\"\n                >\n                    <span part=\"expand-collapse\" class=\"expand-collapse\">\n                        <slot name=\"expand-collapse-indicator\">\n                            ${definition.expandCollapseGlyph || \"\"}\n                        </slot>\n                    </span>\n                </div>\n            `)}\n        ${when(x => x.expanded, html `\n                <${context.tagFor(AnchoredRegion)}\n                    :anchorElement=\"${x => x}\"\n                    vertical-positioning-mode=\"dynamic\"\n                    vertical-default-position=\"bottom\"\n                    vertical-inset=\"true\"\n                    horizontal-positioning-mode=\"dynamic\"\n                    horizontal-default-position=\"end\"\n                    class=\"submenu-region\"\n                    dir=\"${x => x.currentDirection}\"\n                    @loaded=\"${x => x.submenuLoaded()}\"\n                    ${ref(\"submenuRegion\")}\n                    part=\"submenu-region\"\n                >\n                    <slot name=\"submenu\"></slot>\n                </${context.tagFor(AnchoredRegion)}>\n            `)}\n    </template>\n`;\n","import { html, slotted } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#Menu} component.\n * @public\n */\nexport const menuTemplate = (context, definition) => html `\n    <template\n        slot=\"${x => (x.slot ? x.slot : x.isNestedMenu() ? \"submenu\" : void 0)}\"\n        role=\"menu\"\n        @keydown=\"${(x, c) => x.handleMenuKeyDown(c.event)}\"\n        @focusout=\"${(x, c) => x.handleFocusOut(c.event)}\"\n    >\n        <slot ${slotted(\"items\")}></slot>\n    </template>\n`;\n","import { html, ref, slotted, when } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(NumberField:class)} component.\n * @public\n */\nexport const numberFieldTemplate = (context, definition) => html `\n    <template class=\"${x => (x.readOnly ? \"readonly\" : \"\")}\">\n        <label\n            part=\"label\"\n            for=\"control\"\n            class=\"${x => x.defaultSlottedNodes && x.defaultSlottedNodes.length\n    ? \"label\"\n    : \"label label__hidden\"}\"\n        >\n            <slot ${slotted(\"defaultSlottedNodes\")}></slot>\n        </label>\n        <div class=\"root\" part=\"root\">\n            ${startSlotTemplate(context, definition)}\n            <input\n                class=\"control\"\n                part=\"control\"\n                id=\"control\"\n                @input=\"${x => x.handleTextInput()}\"\n                @change=\"${x => x.handleChange()}\"\n                @keydown=\"${(x, c) => x.handleKeyDown(c.event)}\"\n                @blur=\"${(x, c) => x.handleBlur()}\"\n                ?autofocus=\"${x => x.autofocus}\"\n                ?disabled=\"${x => x.disabled}\"\n                list=\"${x => x.list}\"\n                maxlength=\"${x => x.maxlength}\"\n                minlength=\"${x => x.minlength}\"\n                placeholder=\"${x => x.placeholder}\"\n                ?readonly=\"${x => x.readOnly}\"\n                ?required=\"${x => x.required}\"\n                size=\"${x => x.size}\"\n                type=\"text\"\n                inputmode=\"numeric\"\n                min=\"${x => x.min}\"\n                max=\"${x => x.max}\"\n                step=\"${x => x.step}\"\n                aria-atomic=\"${x => x.ariaAtomic}\"\n                aria-busy=\"${x => x.ariaBusy}\"\n                aria-controls=\"${x => x.ariaControls}\"\n                aria-current=\"${x => x.ariaCurrent}\"\n                aria-describedby=\"${x => x.ariaDescribedby}\"\n                aria-details=\"${x => x.ariaDetails}\"\n                aria-disabled=\"${x => x.ariaDisabled}\"\n                aria-errormessage=\"${x => x.ariaErrormessage}\"\n                aria-flowto=\"${x => x.ariaFlowto}\"\n                aria-haspopup=\"${x => x.ariaHaspopup}\"\n                aria-hidden=\"${x => x.ariaHidden}\"\n                aria-invalid=\"${x => x.ariaInvalid}\"\n                aria-keyshortcuts=\"${x => x.ariaKeyshortcuts}\"\n                aria-label=\"${x => x.ariaLabel}\"\n                aria-labelledby=\"${x => x.ariaLabelledby}\"\n                aria-live=\"${x => x.ariaLive}\"\n                aria-owns=\"${x => x.ariaOwns}\"\n                aria-relevant=\"${x => x.ariaRelevant}\"\n                aria-roledescription=\"${x => x.ariaRoledescription}\"\n                ${ref(\"control\")}\n            />\n            ${when(x => !x.hideStep && !x.readOnly && !x.disabled, html `\n                    <div class=\"controls\" part=\"controls\">\n                        <div class=\"step-up\" part=\"step-up\" @click=\"${x => x.stepUp()}\">\n                            <slot name=\"step-up-glyph\">\n                                ${definition.stepUpGlyph || \"\"}\n                            </slot>\n                        </div>\n                        <div\n                            class=\"step-down\"\n                            part=\"step-down\"\n                            @click=\"${x => x.stepDown()}\"\n                        >\n                            <slot name=\"step-down-glyph\">\n                                ${definition.stepDownGlyph || \"\"}\n                            </slot>\n                        </div>\n                    </div>\n                `)}\n            ${endSlotTemplate(context, definition)}\n        </div>\n    </template>\n`;\n","import { html, ref } from \"@microsoft/fast-element\";\n/**\n * A mixin class implementing start and end elements.\n * These are generally used to decorate text elements with icons or other visual indicators.\n * @public\n */\nexport class StartEnd {\n    handleStartContentChange() {\n        this.startContainer.classList.toggle(\"start\", this.start.assignedNodes().length > 0);\n    }\n    handleEndContentChange() {\n        this.endContainer.classList.toggle(\"end\", this.end.assignedNodes().length > 0);\n    }\n}\n/**\n * The template for the end element.\n * For use with {@link StartEnd}\n *\n * @public\n */\nexport const endSlotTemplate = (context, definition) => html `\n    <span\n        part=\"end\"\n        ${ref(\"endContainer\")}\n        class=${x => (definition.end ? \"end\" : void 0)}\n    >\n        <slot name=\"end\" ${ref(\"end\")} @slotchange=\"${x => x.handleEndContentChange()}\">\n            ${definition.end || \"\"}\n        </slot>\n    </span>\n`;\n/**\n * The template for the start element.\n * For use with {@link StartEnd}\n *\n * @public\n */\nexport const startSlotTemplate = (context, definition) => html `\n    <span\n        part=\"start\"\n        ${ref(\"startContainer\")}\n        class=\"${x => (definition.start ? \"start\" : void 0)}\"\n    >\n        <slot\n            name=\"start\"\n            ${ref(\"start\")}\n            @slotchange=\"${x => x.handleStartContentChange()}\"\n        >\n            ${definition.start || \"\"}\n        </slot>\n    </span>\n`;\n/**\n * The template for the end element.\n * For use with {@link StartEnd}\n *\n * @public\n * @deprecated - use endSlotTemplate\n */\nexport const endTemplate = html `\n    <span part=\"end\" ${ref(\"endContainer\")}>\n        <slot\n            name=\"end\"\n            ${ref(\"end\")}\n            @slotchange=\"${x => x.handleEndContentChange()}\"\n        ></slot>\n    </span>\n`;\n/**\n * The template for the start element.\n * For use with {@link StartEnd}\n *\n * @public\n * @deprecated - use startSlotTemplate\n */\nexport const startTemplate = html `\n    <span part=\"start\" ${ref(\"startContainer\")}>\n        <slot\n            name=\"start\"\n            ${ref(\"start\")}\n            @slotchange=\"${x => x.handleStartContentChange()}\"\n        ></slot>\n    </span>\n`;\n","import { html, when } from \"@microsoft/fast-element\";\nconst progressSegments = 44;\n/**\n * The template for the {@link @microsoft/fast-foundation#BaseProgress} component.\n * @public\n */\nexport const progressRingTemplate = (context, definition) => html `\n    <template\n        role=\"progressbar\"\n        aria-valuenow=\"${x => x.value}\"\n        aria-valuemin=\"${x => x.min}\"\n        aria-valuemax=\"${x => x.max}\"\n        class=\"${x => (x.paused ? \"paused\" : \"\")}\"\n    >\n        ${when(x => typeof x.value === \"number\", html `\n                <svg\n                    class=\"progress\"\n                    part=\"progress\"\n                    viewBox=\"0 0 16 16\"\n                    slot=\"determinate\"\n                >\n                    <circle\n                        class=\"background\"\n                        part=\"background\"\n                        cx=\"8px\"\n                        cy=\"8px\"\n                        r=\"7px\"\n                    ></circle>\n                    <circle\n                        class=\"determinate\"\n                        part=\"determinate\"\n                        style=\"stroke-dasharray: ${x => (progressSegments * x.percentComplete) /\n    100}px ${progressSegments}px\"\n                        cx=\"8px\"\n                        cy=\"8px\"\n                        r=\"7px\"\n                    ></circle>\n                </svg>\n            `, html `\n                <slot name=\"indeterminate\" slot=\"indeterminate\">\n                    ${definition.indeterminateIndicator || \"\"}\n                </slot>\n            `)}\n    </template>\n`;\n","import { html, when } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#BaseProgress} component.\n * @public\n */\nexport const progressTemplate = (context, defintion) => html `\n    <template\n        role=\"progressbar\"\n        aria-valuenow=\"${x => x.value}\"\n        aria-valuemin=\"${x => x.min}\"\n        aria-valuemax=\"${x => x.max}\"\n        class=\"${x => (x.paused ? \"paused\" : \"\")}\"\n    >\n        ${when(x => typeof x.value === \"number\", html `\n                <div class=\"progress\" part=\"progress\" slot=\"determinate\">\n                    <div\n                        class=\"determinate\"\n                        part=\"determinate\"\n                        style=\"width: ${x => x.percentComplete}%\"\n                    ></div>\n                </div>\n            `, html `\n                <div class=\"progress\" part=\"progress\" slot=\"indeterminate\">\n                    <slot class=\"indeterminate\" name=\"indeterminate\">\n                        ${defintion.indeterminateIndicator1 || \"\"}\n                        ${defintion.indeterminateIndicator2 || \"\"}\n                    </slot>\n                </div>\n            `)}\n    </template>\n`;\n","import { elements, html, slotted } from \"@microsoft/fast-element\";\nimport { Orientation } from \"@microsoft/fast-web-utilities\";\n/**\n * The template for the {@link @microsoft/fast-foundation#RadioGroup} component.\n * @public\n */\nexport const radioGroupTemplate = (context, definition) => html `\n    <template\n        role=\"radiogroup\"\n        aria-disabled=\"${x => x.disabled}\"\n        aria-readonly=\"${x => x.readOnly}\"\n        @click=\"${(x, c) => x.clickHandler(c.event)}\"\n        @keydown=\"${(x, c) => x.keydownHandler(c.event)}\"\n        @focusout=\"${(x, c) => x.focusOutHandler(c.event)}\"\n    >\n        <slot name=\"label\"></slot>\n        <div\n            class=\"positioning-region ${x => x.orientation === Orientation.horizontal ? \"horizontal\" : \"vertical\"}\"\n            part=\"positioning-region\"\n        >\n            <slot\n                ${slotted({\n    property: \"slottedRadioButtons\",\n    filter: elements(\"[role=radio]\"),\n})}\n            ></slot>\n        </div>\n    </template>\n`;\n","import { html, slotted } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Radio:class)} component.\n * @public\n */\nexport const radioTemplate = (context, definition) => html `\n    <template\n        role=\"radio\"\n        class=\"${x => (x.checked ? \"checked\" : \"\")} ${x => x.readOnly ? \"readonly\" : \"\"}\"\n        aria-checked=\"${x => x.checked}\"\n        aria-required=\"${x => x.required}\"\n        aria-disabled=\"${x => x.disabled}\"\n        aria-readonly=\"${x => x.readOnly}\"\n        @keypress=\"${(x, c) => x.keypressHandler(c.event)}\"\n        @click=\"${(x, c) => x.clickHandler(c.event)}\"\n    >\n        <div part=\"control\" class=\"control\">\n            <slot name=\"checked-indicator\">\n                ${definition.checkedIndicator || \"\"}\n            </slot>\n        </div>\n        <label\n            part=\"label\"\n            class=\"${x => x.defaultSlottedNodes && x.defaultSlottedNodes.length\n    ? \"label\"\n    : \"label label__hidden\"}\"\n        >\n            <slot ${slotted(\"defaultSlottedNodes\")}></slot>\n        </label>\n    </template>\n`;\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\nimport { whitespaceFilter } from \"../utilities/whitespace-filter.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Search:class)} component.\n * @public\n */\nexport const searchTemplate = (context, definition) => html `\n    <template\n        class=\"\n            ${x => (x.readOnly ? \"readonly\" : \"\")}\n        \"\n    >\n        <label\n            part=\"label\"\n            for=\"control\"\n            class=\"${x => x.defaultSlottedNodes && x.defaultSlottedNodes.length\n    ? \"label\"\n    : \"label label__hidden\"}\"\n        >\n            <slot\n                ${slotted({ property: \"defaultSlottedNodes\", filter: whitespaceFilter })}\n            ></slot>\n        </label>\n        <div class=\"root\" part=\"root\" ${ref(\"root\")}>\n            ${startSlotTemplate(context, definition)}\n            <div class=\"input-wrapper\" part=\"input-wrapper\">\n                <input\n                    class=\"control\"\n                    part=\"control\"\n                    id=\"control\"\n                    @input=\"${x => x.handleTextInput()}\"\n                    @change=\"${x => x.handleChange()}\"\n                    ?autofocus=\"${x => x.autofocus}\"\n                    ?disabled=\"${x => x.disabled}\"\n                    list=\"${x => x.list}\"\n                    maxlength=\"${x => x.maxlength}\"\n                    minlength=\"${x => x.minlength}\"\n                    pattern=\"${x => x.pattern}\"\n                    placeholder=\"${x => x.placeholder}\"\n                    ?readonly=\"${x => x.readOnly}\"\n                    ?required=\"${x => x.required}\"\n                    size=\"${x => x.size}\"\n                    ?spellcheck=\"${x => x.spellcheck}\"\n                    :value=\"${x => x.value}\"\n                    type=\"search\"\n                    aria-atomic=\"${x => x.ariaAtomic}\"\n                    aria-busy=\"${x => x.ariaBusy}\"\n                    aria-controls=\"${x => x.ariaControls}\"\n                    aria-current=\"${x => x.ariaCurrent}\"\n                    aria-describedby=\"${x => x.ariaDescribedby}\"\n                    aria-details=\"${x => x.ariaDetails}\"\n                    aria-disabled=\"${x => x.ariaDisabled}\"\n                    aria-errormessage=\"${x => x.ariaErrormessage}\"\n                    aria-flowto=\"${x => x.ariaFlowto}\"\n                    aria-haspopup=\"${x => x.ariaHaspopup}\"\n                    aria-hidden=\"${x => x.ariaHidden}\"\n                    aria-invalid=\"${x => x.ariaInvalid}\"\n                    aria-keyshortcuts=\"${x => x.ariaKeyshortcuts}\"\n                    aria-label=\"${x => x.ariaLabel}\"\n                    aria-labelledby=\"${x => x.ariaLabelledby}\"\n                    aria-live=\"${x => x.ariaLive}\"\n                    aria-owns=\"${x => x.ariaOwns}\"\n                    aria-relevant=\"${x => x.ariaRelevant}\"\n                    aria-roledescription=\"${x => x.ariaRoledescription}\"\n                    ${ref(\"control\")}\n                />\n                <slot name=\"close-button\">\n                    <button\n                        class=\"clear-button ${x => x.value ? \"\" : \"clear-button__hidden\"}\"\n                        part=\"clear-button\"\n                        tabindex=\"-1\"\n                        @click=${x => x.handleClearInput()}\n                    >\n                        <slot name=\"close-glyph\">\n                            <svg\n                                width=\"9\"\n                                height=\"9\"\n                                viewBox=\"0 0 9 9\"\n                                xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                                <path\n                                    d=\"M0.146447 0.146447C0.338683 -0.0478972 0.645911 -0.0270359 0.853553 0.146447L4.5 3.793L8.14645 0.146447C8.34171 -0.0488155 8.65829 -0.0488155 8.85355 0.146447C9.04882 0.341709 9.04882 0.658291 8.85355 0.853553L5.207 4.5L8.85355 8.14645C9.05934 8.35223 9.03129 8.67582 8.85355 8.85355C8.67582 9.03129 8.35409 9.02703 8.14645 8.85355L4.5 5.207L0.853553 8.85355C0.658291 9.04882 0.341709 9.04882 0.146447 8.85355C-0.0488155 8.65829 -0.0488155 8.34171 0.146447 8.14645L3.793 4.5L0.146447 0.853553C-0.0268697 0.680237 -0.0457894 0.34079 0.146447 0.146447Z\"\n                                />\n                            </svg>\n                        </slot>\n                    </button>\n                </slot>\n            </div>\n            ${endSlotTemplate(context, definition)}\n        </div>\n    </template>\n`;\n","import { html, ref, slotted, when } from \"@microsoft/fast-element\";\nimport { Listbox } from \"../listbox/listbox.js\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Select:class)} component.\n * @public\n */\nexport const selectTemplate = (context, definition) => html `\n    <template\n        class=\"${x => [\n    x.collapsible && \"collapsible\",\n    x.collapsible && x.open && \"open\",\n    x.disabled && \"disabled\",\n    x.collapsible && x.position,\n]\n    .filter(Boolean)\n    .join(\" \")}\"\n        aria-activedescendant=\"${x => x.ariaActiveDescendant}\"\n        aria-controls=\"${x => x.ariaControls}\"\n        aria-disabled=\"${x => x.ariaDisabled}\"\n        aria-expanded=\"${x => x.ariaExpanded}\"\n        aria-haspopup=\"${x => (x.collapsible ? \"listbox\" : null)}\"\n        aria-multiselectable=\"${x => x.ariaMultiSelectable}\"\n        ?open=\"${x => x.open}\"\n        role=\"combobox\"\n        tabindex=\"${x => (!x.disabled ? \"0\" : null)}\"\n        @click=\"${(x, c) => x.clickHandler(c.event)}\"\n        @focusin=\"${(x, c) => x.focusinHandler(c.event)}\"\n        @focusout=\"${(x, c) => x.focusoutHandler(c.event)}\"\n        @keydown=\"${(x, c) => x.keydownHandler(c.event)}\"\n        @mousedown=\"${(x, c) => x.mousedownHandler(c.event)}\"\n    >\n        ${when(x => x.collapsible, html `\n                <div\n                    class=\"control\"\n                    part=\"control\"\n                    ?disabled=\"${x => x.disabled}\"\n                    ${ref(\"control\")}\n                >\n                    ${startSlotTemplate(context, definition)}\n                    <slot name=\"button-container\">\n                        <div class=\"selected-value\" part=\"selected-value\">\n                            <slot name=\"selected-value\">${x => x.displayValue}</slot>\n                        </div>\n                        <div aria-hidden=\"true\" class=\"indicator\" part=\"indicator\">\n                            <slot name=\"indicator\">\n                                ${definition.indicator || \"\"}\n                            </slot>\n                        </div>\n                    </slot>\n                    ${endSlotTemplate(context, definition)}\n                </div>\n            `)}\n        <div\n            class=\"listbox\"\n            id=\"${x => x.listboxId}\"\n            part=\"listbox\"\n            role=\"listbox\"\n            ?disabled=\"${x => x.disabled}\"\n            ?hidden=\"${x => (x.collapsible ? !x.open : false)}\"\n            ${ref(\"listbox\")}\n        >\n            <slot\n                ${slotted({\n    filter: Listbox.slottedOptionFilter,\n    flatten: true,\n    property: \"slottedOptions\",\n})}\n            ></slot>\n        </div>\n    </template>\n`;\n","import { html, ref, when } from \"@microsoft/fast-element\";\nimport { Orientation } from \"@microsoft/fast-web-utilities\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(SliderLabel:class)} component.\n * @public\n */\nexport const sliderLabelTemplate = (context, definition) => html `\n    <template\n        aria-disabled=\"${x => x.disabled}\"\n        class=\"${x => x.sliderOrientation || Orientation.horizontal}\n            ${x => (x.disabled ? \"disabled\" : \"\")}\"\n    >\n        <div ${ref(\"root\")} part=\"root\" class=\"root\" style=\"${x => x.positionStyle}\">\n            <div class=\"container\">\n                ${when(x => !x.hideMark, html `\n                        <div class=\"mark\"></div>\n                    `)}\n                <div class=\"label\">\n                    <slot></slot>\n                </div>\n            </div>\n        </div>\n    </template>\n`;\n","import { html, ref } from \"@microsoft/fast-element\";\nimport { Orientation } from \"@microsoft/fast-web-utilities\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Slider:class)} component.\n * @public\n */\nexport const sliderTemplate = (context, definition) => html `\n    <template\n        role=\"slider\"\n        class=\"${x => (x.readOnly ? \"readonly\" : \"\")}\n        ${x => x.orientation || Orientation.horizontal}\"\n        tabindex=\"${x => (x.disabled ? null : 0)}\"\n        aria-valuetext=\"${x => x.valueTextFormatter(x.value)}\"\n        aria-valuenow=\"${x => x.value}\"\n        aria-valuemin=\"${x => x.min}\"\n        aria-valuemax=\"${x => x.max}\"\n        aria-disabled=\"${x => (x.disabled ? true : void 0)}\"\n        aria-readonly=\"${x => (x.readOnly ? true : void 0)}\"\n        aria-orientation=\"${x => x.orientation}\"\n        class=\"${x => x.orientation}\"\n    >\n        <div part=\"positioning-region\" class=\"positioning-region\">\n            <div ${ref(\"track\")} part=\"track-container\" class=\"track\">\n                <slot name=\"track\"></slot>\n                <div part=\"track-start\" class=\"track-start\" style=\"${x => x.position}\">\n                    <slot name=\"track-start\"></slot>\n                </div>\n            </div>\n            <slot></slot>\n            <div\n                ${ref(\"thumb\")}\n                part=\"thumb-container\"\n                class=\"thumb-container\"\n                style=\"${x => x.position}\"\n            >\n                <slot name=\"thumb\">${definition.thumb || \"\"}</slot>\n            </div>\n        </div>\n    </template>\n`;\n","import { html, slotted } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Switch:class)} component.\n * @public\n */\nexport const switchTemplate = (context, definition) => html `\n    <template\n        role=\"switch\"\n        aria-checked=\"${x => x.checked}\"\n        aria-disabled=\"${x => x.disabled}\"\n        aria-readonly=\"${x => x.readOnly}\"\n        tabindex=\"${x => (x.disabled ? null : 0)}\"\n        @keypress=\"${(x, c) => x.keypressHandler(c.event)}\"\n        @click=\"${(x, c) => x.clickHandler(c.event)}\"\n        class=\"${x => (x.checked ? \"checked\" : \"\")}\"\n    >\n        <label\n            part=\"label\"\n            class=\"${x => x.defaultSlottedNodes && x.defaultSlottedNodes.length\n    ? \"label\"\n    : \"label label__hidden\"}\"\n        >\n            <slot ${slotted(\"defaultSlottedNodes\")}></slot>\n        </label>\n        <div part=\"switch\" class=\"switch\">\n            <slot name=\"switch\">${definition.switch || \"\"}</slot>\n        </div>\n        <span class=\"status-message\" part=\"status-message\">\n            <span class=\"checked-message\" part=\"checked-message\">\n                <slot name=\"checked-message\"></slot>\n            </span>\n            <span class=\"unchecked-message\" part=\"unchecked-message\">\n                <slot name=\"unchecked-message\"></slot>\n            </span>\n        </span>\n    </template>\n`;\n","import { html } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#Tab} component.\n * @public\n */\nexport const tabTemplate = (context, definition) => html `\n    <template slot=\"tab\" role=\"tab\" aria-disabled=\"${x => x.disabled}\">\n        <slot></slot>\n    </template>\n`;\n","import { html, ref, slotted, when } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Tabs:class)} component.\n * @public\n */\nexport const tabsTemplate = (context, definition) => html `\n    <template class=\"${x => x.orientation}\">\n        ${startSlotTemplate(context, definition)}\n        <div class=\"tablist\" part=\"tablist\" role=\"tablist\">\n            <slot class=\"tab\" name=\"tab\" part=\"tab\" ${slotted(\"tabs\")}></slot>\n\n            ${when(x => x.showActiveIndicator, html `\n                    <div\n                        ${ref(\"activeIndicatorRef\")}\n                        class=\"activeIndicator\"\n                        part=\"activeIndicator\"\n                    ></div>\n                `)}\n        </div>\n        ${endSlotTemplate(context, definition)}\n        <div class=\"tabpanel\" part=\"tabpanel\">\n            <slot name=\"tabpanel\" ${slotted(\"tabpanels\")}></slot>\n        </div>\n    </template>\n`;\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\nimport { TextAreaResize } from \"./text-area.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(TextArea:class)} component.\n * @public\n */\nexport const textAreaTemplate = (context, definition) => html `\n    <template\n        class=\"\n            ${x => (x.readOnly ? \"readonly\" : \"\")}\n            ${x => (x.resize !== TextAreaResize.none ? `resize-${x.resize}` : \"\")}\"\n    >\n        <label\n            part=\"label\"\n            for=\"control\"\n            class=\"${x => x.defaultSlottedNodes && x.defaultSlottedNodes.length\n    ? \"label\"\n    : \"label label__hidden\"}\"\n        >\n            <slot ${slotted(\"defaultSlottedNodes\")}></slot>\n        </label>\n        <textarea\n            part=\"control\"\n            class=\"control\"\n            id=\"control\"\n            ?autofocus=\"${x => x.autofocus}\"\n            cols=\"${x => x.cols}\"\n            ?disabled=\"${x => x.disabled}\"\n            form=\"${x => x.form}\"\n            list=\"${x => x.list}\"\n            maxlength=\"${x => x.maxlength}\"\n            minlength=\"${x => x.minlength}\"\n            name=\"${x => x.name}\"\n            placeholder=\"${x => x.placeholder}\"\n            ?readonly=\"${x => x.readOnly}\"\n            ?required=\"${x => x.required}\"\n            rows=\"${x => x.rows}\"\n            ?spellcheck=\"${x => x.spellcheck}\"\n            :value=\"${x => x.value}\"\n            aria-atomic=\"${x => x.ariaAtomic}\"\n            aria-busy=\"${x => x.ariaBusy}\"\n            aria-controls=\"${x => x.ariaControls}\"\n            aria-current=\"${x => x.ariaCurrent}\"\n            aria-describedby=\"${x => x.ariaDescribedby}\"\n            aria-details=\"${x => x.ariaDetails}\"\n            aria-disabled=\"${x => x.ariaDisabled}\"\n            aria-errormessage=\"${x => x.ariaErrormessage}\"\n            aria-flowto=\"${x => x.ariaFlowto}\"\n            aria-haspopup=\"${x => x.ariaHaspopup}\"\n            aria-hidden=\"${x => x.ariaHidden}\"\n            aria-invalid=\"${x => x.ariaInvalid}\"\n            aria-keyshortcuts=\"${x => x.ariaKeyshortcuts}\"\n            aria-label=\"${x => x.ariaLabel}\"\n            aria-labelledby=\"${x => x.ariaLabelledby}\"\n            aria-live=\"${x => x.ariaLive}\"\n            aria-owns=\"${x => x.ariaOwns}\"\n            aria-relevant=\"${x => x.ariaRelevant}\"\n            aria-roledescription=\"${x => x.ariaRoledescription}\"\n            @input=\"${(x, c) => x.handleTextInput()}\"\n            @change=\"${x => x.handleChange()}\"\n            ${ref(\"control\")}\n        ></textarea>\n    </template>\n`;\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\nimport { whitespaceFilter } from \"../utilities/whitespace-filter.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(TextField:class)} component.\n * @public\n */\nexport const textFieldTemplate = (context, definition) => html `\n    <template\n        class=\"\n            ${x => (x.readOnly ? \"readonly\" : \"\")}\n        \"\n    >\n        <label\n            part=\"label\"\n            for=\"control\"\n            class=\"${x => x.defaultSlottedNodes && x.defaultSlottedNodes.length\n    ? \"label\"\n    : \"label label__hidden\"}\"\n        >\n            <slot\n                ${slotted({ property: \"defaultSlottedNodes\", filter: whitespaceFilter })}\n            ></slot>\n        </label>\n        <div class=\"root\" part=\"root\">\n            ${startSlotTemplate(context, definition)}\n            <input\n                class=\"control\"\n                part=\"control\"\n                id=\"control\"\n                @input=\"${x => x.handleTextInput()}\"\n                @change=\"${x => x.handleChange()}\"\n                ?autofocus=\"${x => x.autofocus}\"\n                ?disabled=\"${x => x.disabled}\"\n                list=\"${x => x.list}\"\n                maxlength=\"${x => x.maxlength}\"\n                minlength=\"${x => x.minlength}\"\n                pattern=\"${x => x.pattern}\"\n                placeholder=\"${x => x.placeholder}\"\n                ?readonly=\"${x => x.readOnly}\"\n                ?required=\"${x => x.required}\"\n                size=\"${x => x.size}\"\n                ?spellcheck=\"${x => x.spellcheck}\"\n                :value=\"${x => x.value}\"\n                type=\"${x => x.type}\"\n                aria-atomic=\"${x => x.ariaAtomic}\"\n                aria-busy=\"${x => x.ariaBusy}\"\n                aria-controls=\"${x => x.ariaControls}\"\n                aria-current=\"${x => x.ariaCurrent}\"\n                aria-describedby=\"${x => x.ariaDescribedby}\"\n                aria-details=\"${x => x.ariaDetails}\"\n                aria-disabled=\"${x => x.ariaDisabled}\"\n                aria-errormessage=\"${x => x.ariaErrormessage}\"\n                aria-flowto=\"${x => x.ariaFlowto}\"\n                aria-haspopup=\"${x => x.ariaHaspopup}\"\n                aria-hidden=\"${x => x.ariaHidden}\"\n                aria-invalid=\"${x => x.ariaInvalid}\"\n                aria-keyshortcuts=\"${x => x.ariaKeyshortcuts}\"\n                aria-label=\"${x => x.ariaLabel}\"\n                aria-labelledby=\"${x => x.ariaLabelledby}\"\n                aria-live=\"${x => x.ariaLive}\"\n                aria-owns=\"${x => x.ariaOwns}\"\n                aria-relevant=\"${x => x.ariaRelevant}\"\n                aria-roledescription=\"${x => x.ariaRoledescription}\"\n                ${ref(\"control\")}\n            />\n            ${endSlotTemplate(context, definition)}\n        </div>\n    </template>\n`;\n","import { children, elements, html, slotted } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(Toolbar:class)} component.\n *\n * @public\n */\nexport const toolbarTemplate = (context, definition) => html `\n    <template\n        aria-label=\"${x => x.ariaLabel}\"\n        aria-labelledby=\"${x => x.ariaLabelledby}\"\n        aria-orientation=\"${x => x.orientation}\"\n        orientation=\"${x => x.orientation}\"\n        role=\"toolbar\"\n        @click=\"${(x, c) => x.clickHandler(c.event)}\"\n        @focusin=\"${(x, c) => x.focusinHandler(c.event)}\"\n        @keydown=\"${(x, c) => x.keydownHandler(c.event)}\"\n        ${children({\n    property: \"childItems\",\n    attributeFilter: [\"disabled\", \"hidden\"],\n    filter: elements(),\n    subtree: true,\n})}\n    >\n        <slot name=\"label\"></slot>\n        <div class=\"positioning-region\" part=\"positioning-region\">\n            ${startSlotTemplate(context, definition)}\n            <slot\n                ${slotted({\n    filter: elements(),\n    property: \"slottedItems\",\n})}\n            ></slot>\n            ${endSlotTemplate(context, definition)}\n        </div>\n    </template>\n`;\n","import { html, ref, when } from \"@microsoft/fast-element\";\nimport { AnchoredRegion } from \"../anchored-region/anchored-region.js\";\n/**\n * Creates a template for the {@link @microsoft/fast-foundation#(Tooltip:class)} component using the provided prefix.\n * @public\n */\nexport const tooltipTemplate = (context, definition) => {\n    return html `\n        ${when(x => x.tooltipVisible, html `\n            <${context.tagFor(AnchoredRegion)}\n                fixed-placement=\"true\"\n                auto-update-mode=\"${x => x.autoUpdateMode}\"\n                vertical-positioning-mode=\"${x => x.verticalPositioningMode}\"\n                vertical-default-position=\"${x => x.verticalDefaultPosition}\"\n                vertical-inset=\"${x => x.verticalInset}\"\n                vertical-scaling=\"${x => x.verticalScaling}\"\n                horizontal-positioning-mode=\"${x => x.horizontalPositioningMode}\"\n                horizontal-default-position=\"${x => x.horizontalDefaultPosition}\"\n                horizontal-scaling=\"${x => x.horizontalScaling}\"\n                horizontal-inset=\"${x => x.horizontalInset}\"\n                vertical-viewport-lock=\"${x => x.horizontalViewportLock}\"\n                horizontal-viewport-lock=\"${x => x.verticalViewportLock}\"\n                dir=\"${x => x.currentDirection}\"\n                ${ref(\"region\")}\n            >\n                <div class=\"tooltip\" part=\"tooltip\" role=\"tooltip\">\n                    <slot></slot>\n                </div>\n            </${context.tagFor(AnchoredRegion)}>\n        `)}\n    `;\n};\n","import { children, elements, html, ref, slotted, when } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end.js\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(TreeItem:class)} component.\n * @public\n */\nexport const treeItemTemplate = (context, definition) => html `\n    <template\n        role=\"treeitem\"\n        slot=\"${x => (x.isNestedItem() ? \"item\" : void 0)}\"\n        tabindex=\"-1\"\n        class=\"${x => (x.expanded ? \"expanded\" : \"\")} ${x => x.selected ? \"selected\" : \"\"} ${x => (x.nested ? \"nested\" : \"\")}\n            ${x => (x.disabled ? \"disabled\" : \"\")}\"\n        aria-expanded=\"${x => x.childItems && x.childItemLength() > 0 ? x.expanded : void 0}\"\n        aria-selected=\"${x => x.selected}\"\n        aria-disabled=\"${x => x.disabled}\"\n        @focusin=\"${(x, c) => x.handleFocus(c.event)}\"\n        @focusout=\"${(x, c) => x.handleBlur(c.event)}\"\n        ${children({\n    property: \"childItems\",\n    filter: elements(),\n})}\n    >\n        <div class=\"positioning-region\" part=\"positioning-region\">\n            <div class=\"content-region\" part=\"content-region\">\n                ${when(x => x.childItems && x.childItemLength() > 0, html `\n                        <div\n                            aria-hidden=\"true\"\n                            class=\"expand-collapse-button\"\n                            part=\"expand-collapse-button\"\n                            @click=\"${(x, c) => x.handleExpandCollapseButtonClick(c.event)}\"\n                            ${ref(\"expandCollapseButton\")}\n                        >\n                            <slot name=\"expand-collapse-glyph\">\n                                ${definition.expandCollapseGlyph || \"\"}\n                            </slot>\n                        </div>\n                    `)}\n                ${startSlotTemplate(context, definition)}\n                <slot></slot>\n                ${endSlotTemplate(context, definition)}\n            </div>\n        </div>\n        ${when(x => x.childItems &&\n    x.childItemLength() > 0 &&\n    (x.expanded || x.renderCollapsedChildren), html `\n                <div role=\"group\" class=\"items\" part=\"items\">\n                    <slot name=\"item\" ${slotted(\"items\")}></slot>\n                </div>\n            `)}\n    </template>\n`;\n","import { html, ref, slotted } from \"@microsoft/fast-element\";\n/**\n * The template for the {@link @microsoft/fast-foundation#TreeView} component.\n * @public\n */\nexport const treeViewTemplate = (context, definition) => html `\n    <template\n        role=\"tree\"\n        ${ref(\"treeView\")}\n        @keydown=\"${(x, c) => x.handleKeyDown(c.event)}\"\n        @focusin=\"${(x, c) => x.handleFocus(c.event)}\"\n        @focusout=\"${(x, c) => x.handleBlur(c.event)}\"\n        @click=\"${(x, c) => x.handleClick(c.event)}\"\n        @selected-change=\"${(x, c) => x.handleSelectedChange(c.event)}\"\n    >\n        <slot ${slotted(\"slottedTreeItems\")}></slot>\n    </template>\n`;\n","import { global } from '@storybook/global';\nimport { dedent } from 'ts-dedent';\nimport { logger } from '@storybook/client-logger';\n\nvar ADDON_ID=\"storybook/background\",PARAM_KEY=\"backgrounds\";var {document,window}=global,isReduceMotionEnabled=()=>window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches,getBackgroundColorByName=(currentSelectedValue,backgrounds=[],defaultName)=>{if(currentSelectedValue===\"transparent\")return \"transparent\";if(backgrounds.find(background=>background.value===currentSelectedValue))return currentSelectedValue;let defaultBackground=backgrounds.find(background=>background.name===defaultName);if(defaultBackground)return defaultBackground.value;if(defaultName){let availableColors=backgrounds.map(background=>background.name).join(\", \");logger.warn(dedent`\n        Backgrounds Addon: could not find the default color \"${defaultName}\".\n        These are the available colors for your story based on your configuration:\n        ${availableColors}.\n      `);}return \"transparent\"},clearStyles=selector=>{(Array.isArray(selector)?selector:[selector]).forEach(clearStyle);},clearStyle=selector=>{let element=document.getElementById(selector);element&&element.parentElement.removeChild(element);},addGridStyle=(selector,css)=>{let existingStyle=document.getElementById(selector);if(existingStyle)existingStyle.innerHTML!==css&&(existingStyle.innerHTML=css);else {let style=document.createElement(\"style\");style.setAttribute(\"id\",selector),style.innerHTML=css,document.head.appendChild(style);}},addBackgroundStyle=(selector,css,storyId)=>{let existingStyle=document.getElementById(selector);if(existingStyle)existingStyle.innerHTML!==css&&(existingStyle.innerHTML=css);else {let style=document.createElement(\"style\");style.setAttribute(\"id\",selector),style.innerHTML=css;let gridStyleSelector=`addon-backgrounds-grid${storyId?`-docs-${storyId}`:\"\"}`,existingGridStyle=document.getElementById(gridStyleSelector);existingGridStyle?existingGridStyle.parentElement.insertBefore(style,existingGridStyle):document.head.appendChild(style);}};\n\nexport { ADDON_ID, PARAM_KEY, addBackgroundStyle, addGridStyle, clearStyles, getBackgroundColorByName, isReduceMotionEnabled };\n","import { PARAM_KEY } from './chunk-2DMOCDBJ.mjs';\nimport { useMemo, useEffect } from '@storybook/preview-api';\nimport { global } from '@storybook/global';\nimport { dedent } from 'ts-dedent';\n\nvar clearStyles=selector=>{(Array.isArray(selector)?selector:[selector]).forEach(clearStyle);},clearStyle=input=>{let selector=typeof input==\"string\"?input:input.join(\"\"),element=global.document.getElementById(selector);element&&element.parentElement&&element.parentElement.removeChild(element);},addOutlineStyles=(selector,css)=>{let existingStyle=global.document.getElementById(selector);if(existingStyle)existingStyle.innerHTML!==css&&(existingStyle.innerHTML=css);else {let style=global.document.createElement(\"style\");style.setAttribute(\"id\",selector),style.innerHTML=css,global.document.head.appendChild(style);}};function outlineCSS(selector){return dedent`\n    ${selector} body {\n      outline: 1px solid #2980b9 !important;\n    }\n\n    ${selector} article {\n      outline: 1px solid #3498db !important;\n    }\n\n    ${selector} nav {\n      outline: 1px solid #0088c3 !important;\n    }\n\n    ${selector} aside {\n      outline: 1px solid #33a0ce !important;\n    }\n\n    ${selector} section {\n      outline: 1px solid #66b8da !important;\n    }\n\n    ${selector} header {\n      outline: 1px solid #99cfe7 !important;\n    }\n\n    ${selector} footer {\n      outline: 1px solid #cce7f3 !important;\n    }\n\n    ${selector} h1 {\n      outline: 1px solid #162544 !important;\n    }\n\n    ${selector} h2 {\n      outline: 1px solid #314e6e !important;\n    }\n\n    ${selector} h3 {\n      outline: 1px solid #3e5e85 !important;\n    }\n\n    ${selector} h4 {\n      outline: 1px solid #449baf !important;\n    }\n\n    ${selector} h5 {\n      outline: 1px solid #c7d1cb !important;\n    }\n\n    ${selector} h6 {\n      outline: 1px solid #4371d0 !important;\n    }\n\n    ${selector} main {\n      outline: 1px solid #2f4f90 !important;\n    }\n\n    ${selector} address {\n      outline: 1px solid #1a2c51 !important;\n    }\n\n    ${selector} div {\n      outline: 1px solid #036cdb !important;\n    }\n\n    ${selector} p {\n      outline: 1px solid #ac050b !important;\n    }\n\n    ${selector} hr {\n      outline: 1px solid #ff063f !important;\n    }\n\n    ${selector} pre {\n      outline: 1px solid #850440 !important;\n    }\n\n    ${selector} blockquote {\n      outline: 1px solid #f1b8e7 !important;\n    }\n\n    ${selector} ol {\n      outline: 1px solid #ff050c !important;\n    }\n\n    ${selector} ul {\n      outline: 1px solid #d90416 !important;\n    }\n\n    ${selector} li {\n      outline: 1px solid #d90416 !important;\n    }\n\n    ${selector} dl {\n      outline: 1px solid #fd3427 !important;\n    }\n\n    ${selector} dt {\n      outline: 1px solid #ff0043 !important;\n    }\n\n    ${selector} dd {\n      outline: 1px solid #e80174 !important;\n    }\n\n    ${selector} figure {\n      outline: 1px solid #ff00bb !important;\n    }\n\n    ${selector} figcaption {\n      outline: 1px solid #bf0032 !important;\n    }\n\n    ${selector} table {\n      outline: 1px solid #00cc99 !important;\n    }\n\n    ${selector} caption {\n      outline: 1px solid #37ffc4 !important;\n    }\n\n    ${selector} thead {\n      outline: 1px solid #98daca !important;\n    }\n\n    ${selector} tbody {\n      outline: 1px solid #64a7a0 !important;\n    }\n\n    ${selector} tfoot {\n      outline: 1px solid #22746b !important;\n    }\n\n    ${selector} tr {\n      outline: 1px solid #86c0b2 !important;\n    }\n\n    ${selector} th {\n      outline: 1px solid #a1e7d6 !important;\n    }\n\n    ${selector} td {\n      outline: 1px solid #3f5a54 !important;\n    }\n\n    ${selector} col {\n      outline: 1px solid #6c9a8f !important;\n    }\n\n    ${selector} colgroup {\n      outline: 1px solid #6c9a9d !important;\n    }\n\n    ${selector} button {\n      outline: 1px solid #da8301 !important;\n    }\n\n    ${selector} datalist {\n      outline: 1px solid #c06000 !important;\n    }\n\n    ${selector} fieldset {\n      outline: 1px solid #d95100 !important;\n    }\n\n    ${selector} form {\n      outline: 1px solid #d23600 !important;\n    }\n\n    ${selector} input {\n      outline: 1px solid #fca600 !important;\n    }\n\n    ${selector} keygen {\n      outline: 1px solid #b31e00 !important;\n    }\n\n    ${selector} label {\n      outline: 1px solid #ee8900 !important;\n    }\n\n    ${selector} legend {\n      outline: 1px solid #de6d00 !important;\n    }\n\n    ${selector} meter {\n      outline: 1px solid #e8630c !important;\n    }\n\n    ${selector} optgroup {\n      outline: 1px solid #b33600 !important;\n    }\n\n    ${selector} option {\n      outline: 1px solid #ff8a00 !important;\n    }\n\n    ${selector} output {\n      outline: 1px solid #ff9619 !important;\n    }\n\n    ${selector} progress {\n      outline: 1px solid #e57c00 !important;\n    }\n\n    ${selector} select {\n      outline: 1px solid #e26e0f !important;\n    }\n\n    ${selector} textarea {\n      outline: 1px solid #cc5400 !important;\n    }\n\n    ${selector} details {\n      outline: 1px solid #33848f !important;\n    }\n\n    ${selector} summary {\n      outline: 1px solid #60a1a6 !important;\n    }\n\n    ${selector} command {\n      outline: 1px solid #438da1 !important;\n    }\n\n    ${selector} menu {\n      outline: 1px solid #449da6 !important;\n    }\n\n    ${selector} del {\n      outline: 1px solid #bf0000 !important;\n    }\n\n    ${selector} ins {\n      outline: 1px solid #400000 !important;\n    }\n\n    ${selector} img {\n      outline: 1px solid #22746b !important;\n    }\n\n    ${selector} iframe {\n      outline: 1px solid #64a7a0 !important;\n    }\n\n    ${selector} embed {\n      outline: 1px solid #98daca !important;\n    }\n\n    ${selector} object {\n      outline: 1px solid #00cc99 !important;\n    }\n\n    ${selector} param {\n      outline: 1px solid #37ffc4 !important;\n    }\n\n    ${selector} video {\n      outline: 1px solid #6ee866 !important;\n    }\n\n    ${selector} audio {\n      outline: 1px solid #027353 !important;\n    }\n\n    ${selector} source {\n      outline: 1px solid #012426 !important;\n    }\n\n    ${selector} canvas {\n      outline: 1px solid #a2f570 !important;\n    }\n\n    ${selector} track {\n      outline: 1px solid #59a600 !important;\n    }\n\n    ${selector} map {\n      outline: 1px solid #7be500 !important;\n    }\n\n    ${selector} area {\n      outline: 1px solid #305900 !important;\n    }\n\n    ${selector} a {\n      outline: 1px solid #ff62ab !important;\n    }\n\n    ${selector} em {\n      outline: 1px solid #800b41 !important;\n    }\n\n    ${selector} strong {\n      outline: 1px solid #ff1583 !important;\n    }\n\n    ${selector} i {\n      outline: 1px solid #803156 !important;\n    }\n\n    ${selector} b {\n      outline: 1px solid #cc1169 !important;\n    }\n\n    ${selector} u {\n      outline: 1px solid #ff0430 !important;\n    }\n\n    ${selector} s {\n      outline: 1px solid #f805e3 !important;\n    }\n\n    ${selector} small {\n      outline: 1px solid #d107b2 !important;\n    }\n\n    ${selector} abbr {\n      outline: 1px solid #4a0263 !important;\n    }\n\n    ${selector} q {\n      outline: 1px solid #240018 !important;\n    }\n\n    ${selector} cite {\n      outline: 1px solid #64003c !important;\n    }\n\n    ${selector} dfn {\n      outline: 1px solid #b4005a !important;\n    }\n\n    ${selector} sub {\n      outline: 1px solid #dba0c8 !important;\n    }\n\n    ${selector} sup {\n      outline: 1px solid #cc0256 !important;\n    }\n\n    ${selector} time {\n      outline: 1px solid #d6606d !important;\n    }\n\n    ${selector} code {\n      outline: 1px solid #e04251 !important;\n    }\n\n    ${selector} kbd {\n      outline: 1px solid #5e001f !important;\n    }\n\n    ${selector} samp {\n      outline: 1px solid #9c0033 !important;\n    }\n\n    ${selector} var {\n      outline: 1px solid #d90047 !important;\n    }\n\n    ${selector} mark {\n      outline: 1px solid #ff0053 !important;\n    }\n\n    ${selector} bdi {\n      outline: 1px solid #bf3668 !important;\n    }\n\n    ${selector} bdo {\n      outline: 1px solid #6f1400 !important;\n    }\n\n    ${selector} ruby {\n      outline: 1px solid #ff7b93 !important;\n    }\n\n    ${selector} rt {\n      outline: 1px solid #ff2f54 !important;\n    }\n\n    ${selector} rp {\n      outline: 1px solid #803e49 !important;\n    }\n\n    ${selector} span {\n      outline: 1px solid #cc2643 !important;\n    }\n\n    ${selector} br {\n      outline: 1px solid #db687d !important;\n    }\n\n    ${selector} wbr {\n      outline: 1px solid #db175b !important;\n    }`}var withOutline=(StoryFn,context)=>{let{globals:globals2}=context,isActive=[!0,\"true\"].includes(globals2[PARAM_KEY]),isInDocs=context.viewMode===\"docs\",outlineStyles=useMemo(()=>outlineCSS(isInDocs?'[data-story-block=\"true\"]':\".sb-show-main\"),[context]);return useEffect(()=>{let selectorId=isInDocs?`addon-outline-docs-${context.id}`:\"addon-outline\";return isActive?addOutlineStyles(selectorId,outlineStyles):clearStyles(selectorId),()=>{clearStyles(selectorId);}},[isActive,outlineStyles,context]),StoryFn()};var decorators=[withOutline],globals={[PARAM_KEY]:!1};\n\nexport { decorators, globals };\n","import { global } from '@storybook/global';\nimport { dedent } from 'ts-dedent';\nimport { simulatePageLoad, simulateDOMContentLoaded } from '@storybook/preview-api';\n\nvar {Node}=global,render=(args,context)=>{let{id,component:Component}=context;if(typeof Component==\"string\"){let output=Component;return Object.keys(args).forEach(key=>{output=output.replace(`{{${key}}}`,args[key]);}),output}if(Component instanceof HTMLElement){let output=Component.cloneNode(!0);return Object.keys(args).forEach(key=>{output.setAttribute(key,typeof args[key]==\"string\"?args[key]:JSON.stringify(args[key]));}),output}if(typeof Component==\"function\")return Component(args,context);throw console.warn(dedent`\n    Storybook's HTML renderer only supports rendering DOM elements and strings.\n    Received: ${Component}\n  `),new Error(`Unable to render story ${id}`)};function renderToCanvas({storyFn,kind,name,showMain,showError,forceRemount},canvasElement){let element=storyFn();if(showMain(),typeof element==\"string\")canvasElement.innerHTML=element,simulatePageLoad(canvasElement);else if(element instanceof Node){if(canvasElement.firstChild===element&&forceRemount===!1)return;canvasElement.innerHTML=\"\",canvasElement.appendChild(element),simulateDOMContentLoaded();}else showError({title:`Expecting an HTML snippet or DOM node from the story: \"${name}\" of \"${kind}\".`,description:dedent`\n        Did you forget to return the HTML snippet from the story?\n        Use \"() => <your snippet or node>\" or when defining the story.\n      `});}\n\nexport { render, renderToCanvas };\n"],"names":[],"sourceRoot":""}